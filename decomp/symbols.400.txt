DeliverEvent = 0x80000100;
OpenEvent = 0x80000110;
CloseEvent = 0x80000120;
WaitEvent = 0x80000130;
TestEvent = 0x80000140;
EnableEvent = 0x80000150;
DisableEvent = 0x80000160;
OpenTh = 0x80000170;
CloseTh = 0x80000180;
ChangeTh = 0x80000190;
InitPAD2 = 0x800001a0;
StartPAD2 = 0x800001b0;
StopPAD2 = 0x800001c0;
PAD_init2 = 0x800001d0;
PAD_dr = 0x800001e0;
ReturnFromException = 0x800001f0;
ResetEntryInt = 0x80000200; // allow_duplicated:True
HookEntryInt = 0x80000210;
UnDeliverEvent = 0x80000220;
EnterCriticalSection = 0x80000230;
ExitCriticalSection = 0x80000240;
Exception = 0x80000250;
SetSp = 0x80000260;
SwEnterCriticalSection = 0x80000270;
SwExitCriticalSection = 0x80000290;
open = 0x800002b0;
lseek = 0x800002c0;
read = 0x800002d0;
write = 0x800002e0;
close = 0x800002f0;
ioctl = 0x80000300;
cd = 0x80000310;
format = 0x80000320;
firstfile = 0x80000330;
nextfile = 0x80000340;
rename = 0x80000350;
erase = 0x80000360;
undelete = 0x80000370;
AddDrv = 0x80000380;
DelDrv = 0x80000390;
Krom2RawAdd = 0x800003a0;
_get_errno = 0x800003b0;
_get_error = 0x800003c0;
ChangeClearPAD = 0x800003d0;
GetGp = 0x800003e0;
GetSp = 0x800003f0;
GetCr = 0x80000400;
GetSr = 0x80000410;
_96_init = 0x80000420;
_96_remove = 0x80000438;
GetConf = 0x80000450;
SetMem = 0x80000460;
_boot = 0x80000470;
SystemError = 0x80000480;
bufs_cb_0 = 0x80000490;
bufs_cb_1 = 0x800004a0;
bufs_cb_2 = 0x800004b0;
bufs_cb_3 = 0x800004c0;
bufs_cb_4 = 0x800004d0;
InitHeap = 0x800004e0;
_exit = 0x800004f0;
LoadTest = 0x80000500;
Load = 0x80000510;
Exec = 0x80000520;
FlushCache = 0x80000530;
GPU_cw = 0x80000540;
LoadExec = 0x80000550;
GetSysSp = 0x80000560;
calloc2 = 0x80000570;
_bzero = 0x800005c8; // allow_duplicated:True
calloc3 = 0x800005f8;
_bzero = 0x80000650; // allow_duplicated:True
_remove_ChgclrPAD = 0x80000680;
SetRCnt = 0x800006e0;
GetRCnt = 0x8000077c;
StartRCnt = 0x800007b4;
StopRCnt = 0x800007e8;
ResetRCnt = 0x80000820;
free2 = 0x80000858;
free3 = 0x80000890;
InitHeap2 = 0x800009d0;
InitHeap3 = 0x80000a28;
SysEnqIntRP = 0x80000a88;
SysDeqIntRP = 0x80000a98;
ChangeClearRCnt = 0x80000aa8;
malloc2 = 0x80000ab8;
_ExpAndAlloc = 0x80000c7c;
malloc3 = 0x80000ce0;
SetInitPadFlag = 0x80000d90;
ReadInitPadFlag = 0x80000da0;
PAD_init = 0x80000db0;
InitPAD = 0x80000e4c;
StartPAD = 0x80000ee8;
StopPAD = 0x80000f18;
SetPatchPad = 0x80000f50;
RemovePatchPad = 0x80000fd0;
_Pad1 = 0x80001008;
_IsVSync = 0x80001070;
EnablePAD = 0x800010b0;
DisablePAD = 0x800010c4;
_patch_pad = 0x800010d8;
realloc2 = 0x80001140;
_expand = 0x800011d4;
_bcopy = 0x80001364;
realloc3 = 0x80001398;
_unfree3 = 0x80001488;
_memmove = 0x800014e8;
SetConf = 0x80001560;
ResetEntryInt = 0x80001784; // allow_duplicated:True
InitRCnt = 0x800017a4;
InitException = 0x800017c4;
SysInitMemory = 0x800017e4;
InitDefInt = 0x80001804;
SysMalloc = 0x80001824;
_SysMalloc = 0x80001850;
_init = 0x80001870;
SendPAD = 0x800018a0;
_SendPAD = 0x800018c0;
_send_pad = 0x800018e8;
abs = 0x80001980;
labs = 0x80001994;
atoi = 0x800019a8;
atol = 0x80001adc;
bcmp = 0x80001b00;
bcopy = 0x80001b50;
bsearch = 0x80001b88;
bzero = 0x80001c58;
toupper = 0x80001c88;
tolower = 0x80001cb8;
exit = 0x80001ce8;
getchar = 0x80001cf8;
getc = 0x80001d28;
gets = 0x80001d58;
itoa = 0x80001ed0;
lsearch = 0x80001f10;
malloc = 0x80001f78;
free = 0x80001f84;
calloc = 0x80001f90;
realloc = 0x80001f9c;
memchr = 0x80001fa8;
memcmp = 0x80001ff8;
memcpy = 0x80002048;
memmove = 0x80002080;
memset = 0x800020f0; // allow_duplicated:True
printf = 0x80002120;
prnt = 0x80002160; // allow_duplicated:True
putchar = 0x800027e8;
putc = 0x800028a0;
puts = 0x800028d0;
qsort = 0x80002920;
memswap = 0x80002a74;
rand = 0x80002aa8;
srand = 0x80002ad8;
setjmp = 0x80002ae8;
longjmp = 0x80002b24;
sprintf = 0x80002b68;
strcat = 0x800033c8;
strchr = 0x80003470;
strcmp = 0x800034a8;
strcpy = 0x80003510;
strcspn = 0x80003558;
index = 0x800035d0;
rindex = 0x80003604;
strlen = 0x80003650;
strncat = 0x80003680;
strncmp = 0x800036f8;
strncpy = 0x80003778;
strpbrk = 0x800037f0;
strrchr = 0x80003860;
strspn = 0x800038a8;
strstr = 0x80003920;
strtok = 0x80003998;
strtol = 0x80003a98;
atob = 0x80003c24;
strtoul = 0x80003c60;
todigit = 0x80003db0;
InitCARD2 = 0x80003e10;
StartCARD2 = 0x80003e20;
StopCARD2 = 0x80003e30;
_card_write = 0x80003e40;
_card_read = 0x80003e50;
_new_card = 0x80003e60;
_card_chan = 0x80003e70;
_card_status = 0x80003e80;
_card_wait = 0x80003e90;
_bu_init = 0x80003ea0;
_card_info = 0x80003eb0;
_card_load = 0x80003ec0;
_card_auto = 0x80003ed0;
_card_clear = 0x80003ee0;
_ExitCard = 0x80003f18;
_card_sector_write = 0x80003f98;
_card_format = 0x800040e0;
InitCARD = 0x800042e0;
StartCARD = 0x80004338;
StopCARD = 0x80004370;
_patch_card = 0x800043f0;
_patch_card2 = 0x800044b0;
getintr = 0x80004538;
CD_sync = 0x80004ac0;
CD_ready = 0x80004d40;
CD_cw = 0x8000500c;
CD_vol = 0x80005428;
CD_flush = 0x800054b0;
CD_initvol = 0x80005590;
CD_initintr = 0x80005684;
CD_init = 0x800056d4;
CD_datasync = 0x800058c0;
CD_getsector = 0x80005a2c;
CD_getsector2 = 0x80005b2c;
CD_set_test_parmnum = 0x80005c1c;
callback = 0x80005c2c;
StClearRing = 0x80005d10;
StUnSetRing = 0x80005d70;
data_ready_callback = 0x80005df8;
StGetBackloc = 0x80005e88;
StSetStream = 0x80005ee8;
StSetEmulate = 0x80005f70;
StFreeRing = 0x80005fe8;
init_ring_status = 0x800060a0;
StGetNext = 0x800060e0;
StSetMask = 0x800061a8;
StCdInterrupt = 0x800061c8;
mem2mem = 0x80006b38;
dma_execute = 0x80006b6c;
StSetChannel = 0x80006d28;
StGetNextS = 0x80006d60;
StNextStatus = 0x80006de0;
StRingStatus = 0x80006e88;
CdPlay = 0x80006f50;
cbdataready = 0x8000713c;
play = 0x80007204; // allow_duplicated:True
CdRead2 = 0x80007330;
StCdInterrupt2 = 0x800073c4; // allow_duplicated:True
CdReadFile = 0x800073e8;
CdReadExec = 0x80007570;
cb_read = 0x80007648;
cb_data = 0x80007918;
cd_read_retry = 0x80007a14;
CdReadBreak = 0x80007c28;
CdRead = 0x80007cc4;
CdReadSync = 0x80007dc8;
CdReadCallback = 0x80007e94;
CdReadMode = 0x80007eac;
StSetRing = 0x80007ec8;
CdInit = 0x80007ef8;
def_cbsync = 0x80007f90;
def_cbready = 0x80007fb8;
def_cbread = 0x80007fe0;
CdSearchFile = 0x80008008;
_cmp = 0x800082d4; // allow_duplicated:True
CD_newmedia = 0x800082f4;
CD_searchdir = 0x800085d4;
CD_cachefile = 0x8000867c;
cd_read = 0x80008928;
CdStatus = 0x80008998;
CdMode = 0x800089a8;
CdLastCom = 0x800089b8;
CdLastPos = 0x800089c8;
CdReset = 0x800089d8;
CdFlush = 0x80008a44;
CdSetDebug = 0x80008a64;
CdComstr = 0x80008a7c;
CdIntstr = 0x80008ab0;
CdSync = 0x80008ae4;
CdReady = 0x80008b04;
CdSyncCallback = 0x80008b24;
CdReadyCallback = 0x80008b3c;
CdControl = 0x80008b54;
CdControlF = 0x80008c8c;
CdControlB = 0x80008db8;
CdMix = 0x80008efc;
CdGetSector = 0x80008f1c;
CdGetSector2 = 0x80008f3c;
CdDataCallback = 0x80008f5c;
CdDataSync = 0x80008f80;
CdIntToPos = 0x80008fa0;
CdPosToInt = 0x800090a4;
CdGetToc = 0x80009128;
CdGetToc2 = 0x8000914c;
CdDiskReady = 0x80009370;
CdGetDiskType = 0x8000948c;
AddCOMB = 0x800095e0;
DelCOMB = 0x80009628;
ChangeClearSIO = 0x80009678;
SioAnsyncRead = 0x80009680;
SioSyncroRead = 0x800096e0;
SioAnsyncWrite = 0x80009960;
SioSyncroWrite = 0x800099c4;
_comb_control = 0x80009c40;
EvalpSio = 0x8000a154;
HandleSio = 0x8000a1d0;
r_sioinit = 0x8000a568;
r_sioopen = 0x8000a688;
r_sioclose = 0x8000a690;
r_sioremove = 0x8000a698;
r_siostrategy = 0x8000a738;
__nulldev = 0x8000a824;
DsSyncCallback = 0x8000a830;
DsReadyCallback = 0x8000a844;
DsDataCallback = 0x8000a858;
DsSearchFile = 0x8000a880;
_cmp = 0x8000ab54; // allow_duplicated:True
DS_newmedia = 0x8000ab74;
DS_searchdir = 0x8000ae54;
DS_cachefile = 0x8000aefc;
ds_read = 0x8000b1a8;
DsPlay = 0x8000b208;
play = 0x8000b3e8; // allow_duplicated:True
stop = 0x8000b4f8;
cbready = 0x8000b534;
DsRead2 = 0x8000b6b8;
StCdInterrupt2 = 0x8000b798; // allow_duplicated:True
DsReadFile = 0x8000b7b8;
DsReadExec = 0x8000b934;
DsRead = 0x8000bbf0;
DS_read_cbsync = 0x8000bd00;
DS_read_cbready = 0x8000bd34;
DS_read_cbdata = 0x8000bef4;
DsReadSync = 0x8000bfe8;
DsReadCallback = 0x8000c05c;
DsReadBreak = 0x8000c074;
DsReadMode = 0x8000c0f0;
DsStartReadySystem = 0x8000c110;
DsEndReadySystem = 0x8000c19c;
ER_cbready = 0x8000c1fc;
ER_retry = 0x8000c488;
ER_cbsync = 0x8000c508;
DS_init = 0x8000c540;
DS_reset_members = 0x8000c5dc;
DS_close = 0x8000c6ec;
DS_cw = 0x8000c730;
DS_vsync_callback = 0x8000c7b4;
DS_sync_callback = 0x8000c7c4;
DS_ready_callback = 0x8000c7d4;
DS_system_status = 0x8000c7e4;
DS_lastcom = 0x8000c7fc;
DS_lastmode = 0x8000c80c;
DS_lastpos = 0x8000c81c;
DS_lastseek = 0x8000c82c;
DS_lastread = 0x8000c83c;
DS_status = 0x8000c84c;
DS_sync = 0x8000c85c;
DS_ready = 0x8000c880;
DS_shell_open = 0x8000c8a4;
DS_cw_root = 0x8000c8b4;
DS_vsync_system = 0x8000c9d4;
DS_sync_system = 0x8000ccc4;
DS_sync_for_user = 0x8000cdb8;
DS_sync_for_system = 0x8000cfb0;
DS_sync_for_void = 0x8000d138;
DS_ready_system = 0x8000d248;
DS_scan_result = 0x8000d314;
DS_stop = 0x8000d394;
DS_restart = 0x8000d3f4;
DS_system_active = 0x8000d408;
parcpy = 0x8000d418;
rescpy = 0x8000d460;
tipDsSystem = 0x8000d4a8;
CQ_clear_queue = 0x8000d598;
CQ_delete_command = 0x8000d5c8;
CQ_last_queue = 0x8000d6b8;
CQ_error_flush = 0x8000d710;
CQ_execute = 0x8000d8c4;
CQ_sync_system = 0x8000d93c;
CQ_add_result = 0x8000db64;
DsInit = 0x8000dbf4;
DsReset = 0x8000dd38;
DsClose = 0x8000de44;
DsCommand = 0x8000de64;
DsPacket = 0x8000e08c;
DsSync = 0x8000e3a8;
DsReady = 0x8000e5a8;
DsFlush = 0x8000e658;
DsSystemStatus = 0x8000e6e8;
DsQueueLen = 0x8000e738;
DsStatus = 0x8000e748;
DsShellOpen = 0x8000e768;
DsLastCom = 0x8000e788;
CQ_vsync_system = 0x8000e7a8;
CQ_ready_system = 0x8000e850;
DsMix = 0x8000e950;
DsGetSector = 0x8000e970;
DsGetSector2 = 0x8000e990;
DsDataSync = 0x8000e9b0;
DsIntToPos = 0x8000e9d0;
DsPosToInt = 0x8000ead4;
DsSetDebug = 0x8000eb54;
DsLastPos = 0x8000eb6c;
DsControlF = 0x8000ebc8;
DsControl = 0x8000ebf0;
DsControlB = 0x8000ec5c;
DsComstr = 0x8000ecc8;
DsIntstr = 0x8000ed00;
DsGetToc = 0x8000ed38;
DsGetDiskType = 0x8000eea8;
GD_cbsync = 0x8000ef7c;
GD_cbready = 0x8000efc0;
get_hwconfig = 0x8000f028;
startIntrDMA = 0x8000f128;
trapIntrDMA = 0x8000f178;
setIntrDMA = 0x8000f2fc;
memclr = 0x8000f3a4; // allow_duplicated:True
ResetCallback = 0x8000f3d0;
InterruptCallback = 0x8000f400;
DMACallback = 0x8000f430;
VSyncCallback = 0x8000f460;
VSyncCallbacks = 0x8000f494;
StopCallback = 0x8000f4c4;
RestartCallback = 0x8000f4f4;
CheckCallback = 0x8000f524;
GetIntrMask = 0x8000f534;
SetIntrMask = 0x8000f54c;
startIntr = 0x8000f568;
trapIntr = 0x8000f644;
setIntr = 0x8000f82c;
stopIntr = 0x8000f980;
restartIntr = 0x8000fa2c;
memclr = 0x8000fab4; // allow_duplicated:True
startIntrVSync = 0x8000fae0;
trapIntrVSync = 0x8000fb38;
setIntrVSync = 0x8000fbb0;
memclr = 0x8000fbdc; // allow_duplicated:True
PadInit = 0x8000fc08;
PadRead = 0x8000fc58;
PadStop = 0x8000fc80;
SetVideoMode = 0x8000fca0;
GetVideoMode = 0x8000fcb8;
VSync = 0x8000fcc8;
v_wait = 0x8000fe10;
BreakDraw = 0x8000feb0;
IsIdleGPU = 0x8000ff48;
ContinueDraw = 0x8000ffa8;
GetTPageA = 0x80010120;
LoadTPageA = 0x80010144;
get_cell = 0x80010348;
get_addr = 0x800103c4;
LoadTPage = 0x80010580;
LoadClut = 0x8001066c;
LoadClut2 = 0x800106d4;
SetDefDrawEnv = 0x8001073c;
SetDefDispEnv = 0x800107f4;
SetDumpFnt = 0x80010830;
FntLoad = 0x80010870;
FntOpen = 0x80010914;
FntFlush = 0x80010bcc;
FntPrint = 0x80010ee4;
PutKanji = 0x800112c8;
KanjiFntLoad = 0x80011408;
KanjiFntOpen = 0x80011648;
KanjiFntClose = 0x80011958;
KanjiFntFlush = 0x80011978;
KanjiFntPrint = 0x80011d4c;
GetTimSize = 0x80012168;
Krom2Tim = 0x80012218;
Krom2RawAdd2 = 0x80012708;
kanjitrans = 0x800127b8;
hankanjitrans = 0x80012cec;
DrawOTagIO = 0x80012e20;
DumpOTag = 0x80012ecc;
CheckPrim = 0x800130c4;
GetTPage = 0x800131e8;
GetClut = 0x80013224;
DumpTPage = 0x8001323c;
DumpClut = 0x8001329c;
NextPrim = 0x800132dc;
IsEndPrim = 0x800132f8;
AddPrim = 0x80013314;
AddPrims = 0x80013350;
CatPrim = 0x8001338c;
TermPrim = 0x800133b0;
SetSemiTrans = 0x800133c8;
SetShadeTex = 0x800133f0;
SetPolyF3 = 0x80013418;
SetPolyFT3 = 0x8001342c;
SetPolyG3 = 0x80013440;
SetPolyGT3 = 0x80013454;
SetPolyF4 = 0x80013468;
SetPolyFT4 = 0x8001347c;
SetPolyG4 = 0x80013490;
SetPolyGT4 = 0x800134a4;
SetSprt8 = 0x800134b8;
SetSprt16 = 0x800134cc;
SetSprt = 0x800134e0;
SetTile1 = 0x800134f4;
SetTile8 = 0x80013508;
SetTile16 = 0x8001351c;
SetTile = 0x80013530;
SetLineF2 = 0x80013544;
SetLineG2 = 0x80013558;
SetLineF3 = 0x8001356c;
SetLineG3 = 0x8001358c;
SetLineF4 = 0x800135ac;
SetLineG4 = 0x800135cc;
SetDrawTPage = 0x800135ec;
SetDrawMove = 0x80013618;
SetDrawLoad = 0x80013678;
MargePrim = 0x800136e4;
DumpDrawEnv = 0x8001371c;
DumpDispEnv = 0x80013830;
ResetGraph = 0x800138e0;
SetGraphReverse = 0x80013a64;
SetGraphDebug = 0x80013b78;
SetGraphQueue = 0x80013bdc;
GetGraphType = 0x80013c88;
GetGraphDebug = 0x80013c98;
DrawSyncCallback = 0x80013ca8;
SetDispMask = 0x80013d04;
DrawSync = 0x80013da0;
checkRECT = 0x80013e0c;
ClearImage = 0x80013f34;
ClearImage2 = 0x80013fc8;
LoadImage = 0x80014064;
StoreImage = 0x800140c8;
MoveImage = 0x8001412c;
ClearOTag = 0x800141f0;
ClearOTagR = 0x800142a8;
DrawPrim = 0x80014340;
DrawOTag = 0x800143a0;
PutDrawEnv = 0x80014414;
DrawOTagEnv = 0x80014518;
GetDrawEnv = 0x80014634;
PutDispEnv = 0x8001466c;
GetDispEnv = 0x80014b14;
GetODE = 0x80014b4c;
SetTexWindow = 0x80014b7c;
SetDrawArea = 0x80014bb8;
SetDrawOffset = 0x80014c3c;
SetPriority = 0x80014c80;
SetDrawMode = 0x80014cac;
SetDrawEnv = 0x80014d04;
SetDrawEnv2 = 0x80014f1c;
get_mode = 0x800151ac;
get_cs = 0x80015204;
get_ce = 0x800152d0;
get_ofs = 0x8001539c;
get_tw = 0x800153e0;
get_dx = 0x80015464;
_status = 0x80015514;
_otc = 0x8001552c;
_clr = 0x80015614;
_dws = 0x80015870;
_drs = 0x80015aac;
_ctl = 0x80015d30;
_getctl = 0x80015d58;
_cwb = 0x80015d6c;
_cwc = 0x80015dbc;
_param = 0x80015e08;
_addque = 0x80015e38;
_addque2 = 0x80015e5c;
_exeque = 0x8001613c;
_reset = 0x80016428;
_sync = 0x80016584;
set_alarm = 0x800166cc;
get_alarm = 0x80016700;
_version = 0x8001686c;
memset = 0x80016948; // allow_duplicated:True
OpenTIM = 0x80016978;
ReadTIM = 0x80016988;
OpenTMD = 0x800169f0;
ReadTMD = 0x80016a30;
get_tim_addr = 0x80016cdc;
get_tmd_addr = 0x80016dfc;
unpack_packet = 0x80016f94;
GsU_00000000 = 0x80018278;
GsU_01000000 = 0x80018298;
GsU_0100000c = 0x80018408;
GsU_0100000d = 0x800187a0;
GsU_01000014 = 0x80018ac8;
GsU_01000015 = 0x80019230;
GsU_0102000c = 0x800197a8;
GsU_0102000d = 0x80019c08;
GsU_01020014 = 0x80019ff0;
GsU_01020015 = 0x8001a4a0;
GsU_01040048 = 0x8001aa58;
GsU_01040049 = 0x8001ac58;
GsU_0104004c = 0x8001ae80;
GsU_0104004d = 0x8001b098;
GsU_01040050 = 0x8001b2d8;
GsU_01040051 = 0x8001b530;
GsU_01040054 = 0x8001b7b8;
GsU_01040055 = 0x8001ba38;
GsU_02000000 = 0x8001bce8;
GsU_02000001 = 0x8001bd70;
GsU_03000000 = 0x8001be20;
get_tctr = 0x8001c13c;
GsU_03000001 = 0x8001c240;
GsU_03000009 = 0x8001c400;
GsU_03000010 = 0x8001c5c0;
GsU_03000011 = 0x8001c7a0;
GsU_03000019 = 0x8001caf0;
GsU_03000100 = 0x8001ce40;
GsU_03000111 = 0x8001d030;
GsU_03000119 = 0x8001d518;
GsU_03000909 = 0x8001da00;
GsU_03000910 = 0x8001dc68;
GsU_03000911 = 0x8001df00;
GsU_04010010 = 0x8001e300;
myVectorNormal = 0x8001e664;
check_z = 0x8001e8a0;
GsU_04010011 = 0x8001eb48;
GsU_04010018 = 0x8001ef18;
GsU_04010019 = 0x8001f038;
GsU_04010020 = 0x8001f138;
mygteMIMefunc = 0x8001f2cc;
GsU_04010028 = 0x8001f378;
GsSortBg = 0x8001f480;
GsSortFastBg = 0x8001fcb8;
GsSortFixBg16 = 0x80020478;
GsInitFixBg16 = 0x800207b0;
GsSortFixBg32 = 0x80020970;
GsInitFixBg32 = 0x80020cb0;
GsSortBoxFill = 0x80020e28;
_mk_spr_packet = 0x80020f00;
_mk_xpndsp = 0x80020f40;
_mk_normsp = 0x80021208;
_make_packet = 0x80021478;
GsSortLine = 0x80021510;
GsSortGLine = 0x800215e8;
GsSortPoly = 0x800216f0;
GsSortSpriteA = 0x800218b8;
GsSortSpriteB = 0x80021db0;
GsSortSprite = 0x800222c0;
GsSortFastSpriteA = 0x800227c0;
GsSortFastSpriteB = 0x80022938;
GsSortFastSprite = 0x80022ac0;
GsSortFlipSprite = 0x80022c40;
GsSortFastSprite2 = 0x80022e98;
GsInitFastSprite2 = 0x80022fb8;
GsSortFastSpriteArray = 0x800230b8;
GsInitFastSpriteArray = 0x800231d0;
GsSetFastSpriteArray = 0x8002327c;
GsScanAnim = 0x80023330;
GsLinkAnim = 0x800233d8;
GsMapCoordUnit = 0x80023420;
GsA4divF3L = 0x800234a8;
Adiv_f3 = 0x800237e4; // allow_duplicated:True
sukima = 0x80023b24; // allow_duplicated:True
outline = 0x80023c04; // allow_duplicated:True
bunV = 0x80023d50; // allow_duplicated:True
GsA4divF3LFG = 0x80023db8;
Adiv_f3 = 0x800240f4; // allow_duplicated:True
sukima = 0x80024434; // allow_duplicated:True
outline = 0x80024514; // allow_duplicated:True
bunV = 0x80024660; // allow_duplicated:True
GsA4divF3NL = 0x800246c8;
Adiv_f3 = 0x800249b8; // allow_duplicated:True
sukima = 0x80024cf8; // allow_duplicated:True
outline = 0x80024dd8; // allow_duplicated:True
bunV = 0x80024f24; // allow_duplicated:True
GsA4divNF3 = 0x80024f88;
Adiv_f3 = 0x80025278; // allow_duplicated:True
sukima = 0x800255b8; // allow_duplicated:True
outline = 0x80025698; // allow_duplicated:True
bunV = 0x800257e4; // allow_duplicated:True
GsTMDfastF3GL = 0x80025848;
GsTMDfastF3GLFG = 0x80025a50;
GsTMDfastF3GNL = 0x80025c58;
GsPrstF3GL = 0x80025dd8;
GsPrstF3GLFG = 0x80025fd8;
GsPrstF3GNL = 0x800261d8;
GsTMDfastF3M = 0x80026320;
GsTMDfastF3MFG = 0x80026668;
GsA4divF4L = 0x800269b0;
Adiv_f4 = 0x80026d68; // allow_duplicated:True
sukima = 0x8002715c; // allow_duplicated:True
outline = 0x8002723c; // allow_duplicated:True
bunV = 0x800273f8; // allow_duplicated:True
GsA4divF4LFG = 0x80027460;
Adiv_f4 = 0x80027818; // allow_duplicated:True
sukima = 0x80027c0c; // allow_duplicated:True
outline = 0x80027cec; // allow_duplicated:True
bunV = 0x80027ea8; // allow_duplicated:True
GsA4divF4NL = 0x80027f10;
Adiv_f4 = 0x80028290; // allow_duplicated:True
sukima = 0x80028684; // allow_duplicated:True
outline = 0x80028764; // allow_duplicated:True
bunV = 0x80028920; // allow_duplicated:True
GsA4divNF4 = 0x80028988;
Adiv_f4 = 0x80028d08; // allow_duplicated:True
sukima = 0x800290fc; // allow_duplicated:True
outline = 0x800291dc; // allow_duplicated:True
bunV = 0x80029398; // allow_duplicated:True
GsTMDfastF4GL = 0x80029400;
GsTMDfastF4GLFG = 0x80029688;
GsTMDfastF4GNL = 0x80029910;
GsTMDfastF4M = 0x80029ae8;
GsTMDfastF4MFG = 0x80029ed8;
GsA4divTF3L = 0x8002a2c8;
Adiv_ft3 = 0x8002a658; // allow_duplicated:True
sukima = 0x8002a9e4; // allow_duplicated:True
outline = 0x8002aafc; // allow_duplicated:True
bunV = 0x8002ac48; // allow_duplicated:True
GsA4divTF3LFG = 0x8002ace0;
Adiv_ft3 = 0x8002b070; // allow_duplicated:True
sukima = 0x8002b3fc; // allow_duplicated:True
outline = 0x8002b514; // allow_duplicated:True
bunV = 0x8002b660; // allow_duplicated:True
GsA4divTF3NL = 0x8002b6f8;
Adiv_ft3 = 0x8002ba54; // allow_duplicated:True
sukima = 0x8002bde0; // allow_duplicated:True
outline = 0x8002bef8; // allow_duplicated:True
bunV = 0x8002c044; // allow_duplicated:True
GsA4divTNF3 = 0x8002c0d8;
Adiv_ft3 = 0x8002c428; // allow_duplicated:True
sukima = 0x8002c7b4; // allow_duplicated:True
outline = 0x8002c8cc; // allow_duplicated:True
bunV = 0x8002ca18; // allow_duplicated:True
GsTMDfastTF3M = 0x8002cab0;
GsTMDfastTF3MFG = 0x8002ce50;
GsA4divTF4L = 0x8002d1f0;
Adiv_ft4 = 0x8002d614; // allow_duplicated:True
sukima = 0x8002da78; // allow_duplicated:True
outline = 0x8002db90; // allow_duplicated:True
bunV = 0x8002dd4c; // allow_duplicated:True
GsA4divTF4LFG = 0x8002dde0;
Adiv_ft4 = 0x8002e204; // allow_duplicated:True
sukima = 0x8002e668; // allow_duplicated:True
outline = 0x8002e780; // allow_duplicated:True
bunV = 0x8002e93c; // allow_duplicated:True
GsA4divTF4NL = 0x8002e9d0;
Adiv_ft4 = 0x8002edd0; // allow_duplicated:True
sukima = 0x8002f234; // allow_duplicated:True
outline = 0x8002f34c; // allow_duplicated:True
bunV = 0x8002f508; // allow_duplicated:True
GsA4divTNF4 = 0x8002f5a0;
Adiv_ft4 = 0x8002f990; // allow_duplicated:True
sukima = 0x8002fdf4; // allow_duplicated:True
outline = 0x8002ff0c; // allow_duplicated:True
bunV = 0x800300c8; // allow_duplicated:True
GsA4divTF4LM = 0x80030160;
Adiv_ft4 = 0x80030698; // allow_duplicated:True
sukima = 0x80030afc; // allow_duplicated:True
outline = 0x80030c14; // allow_duplicated:True
bunV = 0x80030dd0; // allow_duplicated:True
GsA4divTF4LFGM = 0x80030e68;
Adiv_ft4 = 0x800313a0; // allow_duplicated:True
sukima = 0x80031804; // allow_duplicated:True
outline = 0x8003191c; // allow_duplicated:True
bunV = 0x80031ad8; // allow_duplicated:True
GsA4divTF4NLM = 0x80031b70;
Adiv_ft4 = 0x80032074; // allow_duplicated:True
sukima = 0x800324d8; // allow_duplicated:True
outline = 0x800325f0; // allow_duplicated:True
bunV = 0x800327ac; // allow_duplicated:True
GsA4divTNF4M = 0x80032840;
Adiv_ft4 = 0x80032d38; // allow_duplicated:True
sukima = 0x8003319c; // allow_duplicated:True
outline = 0x800332b4; // allow_duplicated:True
bunV = 0x80033470; // allow_duplicated:True
GsTMDfastTF4M = 0x80033508;
GsTMDfastTF4MFG = 0x80033968;
GsA4divG3L = 0x80033dc8;
Adiv_g3 = 0x80034150; // allow_duplicated:True
sukima = 0x800344e0; // allow_duplicated:True
outline = 0x800345d4; // allow_duplicated:True
bunCV = 0x80034720; // allow_duplicated:True
GsA4divG3LFG = 0x800347d8;
Adiv_g3 = 0x80034b60; // allow_duplicated:True
sukima = 0x80034ef0; // allow_duplicated:True
outline = 0x80034fe4; // allow_duplicated:True
bunCV = 0x80035130; // allow_duplicated:True
GsA4divG3NL = 0x800351e8;
Adiv_g3 = 0x800354f8; // allow_duplicated:True
sukima = 0x80035888; // allow_duplicated:True
outline = 0x8003597c; // allow_duplicated:True
bunCV = 0x80035ac8; // allow_duplicated:True
GsA4divNG3 = 0x80035b80;
Adiv_g3 = 0x80035ebc; // allow_duplicated:True
sukima = 0x8003624c; // allow_duplicated:True
outline = 0x80036340; // allow_duplicated:True
bunCV = 0x8003648c; // allow_duplicated:True
GsTMDfastG3GL = 0x80036540;
GsTMDfastG3GLFG = 0x80036730;
GsTMDfastG3GNL = 0x80036920;
GsPrstG3GL = 0x80036a88;
GsPrstG3GLFG = 0x80036c78;
GsPrstG3GNL = 0x80036e68;
GsTMDfastG3M = 0x80036fb0;
GsTMDfastG3MFG = 0x800373d8;
GsA4divG4L = 0x80037800;
Adiv_g4 = 0x80037c50; // allow_duplicated:True
sukima = 0x800380b4; // allow_duplicated:True
outline = 0x800381ac; // allow_duplicated:True
bunCV = 0x80038368; // allow_duplicated:True
GsA4divG4LFG = 0x80038420;
Adiv_g4 = 0x80038870; // allow_duplicated:True
sukima = 0x80038cd4; // allow_duplicated:True
outline = 0x80038dcc; // allow_duplicated:True
bunCV = 0x80038f88; // allow_duplicated:True
GsA4divG4NL = 0x80039040;
Adiv_g4 = 0x800393f0; // allow_duplicated:True
sukima = 0x80039854; // allow_duplicated:True
outline = 0x8003994c; // allow_duplicated:True
bunCV = 0x80039b08; // allow_duplicated:True
GsA4divNG4 = 0x80039bc0;
Adiv_g4 = 0x80039fa8; // allow_duplicated:True
sukima = 0x8003a40c; // allow_duplicated:True
outline = 0x8003a504; // allow_duplicated:True
bunCV = 0x8003a6c0; // allow_duplicated:True
GsTMDfastG4GL = 0x8003a778;
GsTMDfastG4GLFG = 0x8003a9e8;
GsTMDfastG4GNL = 0x8003ac58;
GsTMDfastG4M = 0x8003ae20;
GsTMDfastG4MFG = 0x8003b378;
GsA4divTG3L = 0x8003b8d0;
Adiv_gt3 = 0x8003bccc; // allow_duplicated:True
sukima = 0x8003c0b0; // allow_duplicated:True
outline = 0x8003c1e0; // allow_duplicated:True
bunCV = 0x8003c32c; // allow_duplicated:True
GsA4divTG3LFG = 0x8003c418;
Adiv_gt3 = 0x8003c814; // allow_duplicated:True
sukima = 0x8003cbf8; // allow_duplicated:True
outline = 0x8003cd28; // allow_duplicated:True
bunCV = 0x8003ce74; // allow_duplicated:True
GsA4divTG3NL = 0x8003cf60;
Adiv_gt3 = 0x8003d2c4; // allow_duplicated:True
sukima = 0x8003d6a8; // allow_duplicated:True
outline = 0x8003d7d8; // allow_duplicated:True
bunCV = 0x8003d924; // allow_duplicated:True
GsA4divTNG3 = 0x8003da10;
Adiv_gt3 = 0x8003dda0; // allow_duplicated:True
sukima = 0x8003e184; // allow_duplicated:True
outline = 0x8003e2b4; // allow_duplicated:True
bunCV = 0x8003e400; // allow_duplicated:True
GsTMDfastTG3M = 0x8003e4e8;
GsTMDfastTG3MFG = 0x8003e968;
GsA4divTG4L = 0x8003ede8;
Adiv_gt4 = 0x8003f2d0; // allow_duplicated:True
sukima = 0x8003f7a0; // allow_duplicated:True
outline = 0x8003f8d0; // allow_duplicated:True
bunCV = 0x8003fa8c; // allow_duplicated:True
GsA4divTG4LFG = 0x8003fb78;
Adiv_gt4 = 0x80040060; // allow_duplicated:True
sukima = 0x80040530; // allow_duplicated:True
outline = 0x80040660; // allow_duplicated:True
bunCV = 0x8004081c; // allow_duplicated:True
GsA4divTG4NL = 0x80040908;
Adiv_gt4 = 0x80040d10; // allow_duplicated:True
sukima = 0x800411e0; // allow_duplicated:True
outline = 0x80041310; // allow_duplicated:True
bunCV = 0x800414cc; // allow_duplicated:True
GsA4divTNG4 = 0x800415b8;
Adiv_gt4 = 0x80041a00; // allow_duplicated:True
sukima = 0x80041ed0; // allow_duplicated:True
outline = 0x80042000; // allow_duplicated:True
bunCV = 0x800421bc; // allow_duplicated:True
GsA4divTG4LM = 0x800422a8;
Adiv_gt4 = 0x80042894; // allow_duplicated:True
sukima = 0x80042d64; // allow_duplicated:True
outline = 0x80042e94; // allow_duplicated:True
bunCV = 0x80043050; // allow_duplicated:True
GsA4divTG4LFGM = 0x80043138;
Adiv_gt4 = 0x80043724; // allow_duplicated:True
sukima = 0x80043bf4; // allow_duplicated:True
outline = 0x80043d24; // allow_duplicated:True
bunCV = 0x80043ee0; // allow_duplicated:True
GsA4divTG4NLM = 0x80043fc8;
Adiv_gt4 = 0x800444d8; // allow_duplicated:True
sukima = 0x800449a8; // allow_duplicated:True
outline = 0x80044ad8; // allow_duplicated:True
bunCV = 0x80044c94; // allow_duplicated:True
GsA4divTNG4M = 0x80044d80;
Adiv_gt4 = 0x800452dc; // allow_duplicated:True
sukima = 0x800457ac; // allow_duplicated:True
outline = 0x800458dc; // allow_duplicated:True
bunCV = 0x80045a98; // allow_duplicated:True
GsTMDfastTG4M = 0x80045b80;
GsTMDfastTG4MFG = 0x80046148;
GsInitGraph = 0x80046710;
gpu_init = 0x80046788;
GsInitGraph2 = 0x800468f8;
valiable_init = 0x80046970;
GsSortClear = 0x80046bd4;
GsGetActiveBuff = 0x80046d10;
GsSetDrawBuffOffset = 0x80046d20;
GsSetDrawBuffClip = 0x80046e38;
GsSetOffset = 0x80046ec8;
GsSetClip = 0x80046fc0;
GsSetClip2D = 0x80047040;
GsInitVcount = 0x80047078;
GsGetVcount = 0x800470b0;
GsClearVcount = 0x800470d8;
GsSwapDispBuff = 0x80047100;
GsClearDispArea = 0x800471b8;
GsSetClip2 = 0x80047238;
GsSetOrign = 0x800472a0;
GsSetNearClip = 0x800472b8;
GsSetFarClip = 0x800472c8;
GsDefDispBuff = 0x800472d8;
GsInit3D = 0x80047378;
GsMapModelingData = 0x800473f0;
GsSetProjection = 0x80047468;
GsSetFlatLight = 0x80047488;
gte_set_lc = 0x80047964;
gte_read_lc = 0x800479cc;
GsSetLightMode = 0x80047a20;
GsSetFogParam = 0x80047ab0;
GsSetAmbient = 0x80047b00;
GsDrawOt = 0x80047b28;
GsDrawOtIO = 0x80047b50;
GsClearOt = 0x80047b78;
GsSortOt = 0x80047bd0;
gte_apply_matrixl = 0x80047c80;
gte_apply_matrixll = 0x80047dcc;
gte_copy_matrix = 0x80047f38;
gte_rotate_x_matrix = 0x80047fc8;
gte_rotate_y_matrix = 0x80048088;
gte_rotate_z_matrix = 0x80048148;
gte_scale_matrix = 0x80048200;
gte_init = 0x80048320;
GsGetTimInfo = 0x80048370;
Gssub_make_matrix = 0x80048458;
GsSetWorkBase = 0x80048520;
GsGetWorkBase = 0x80048530;
GsCutOt = 0x80048540;
GsDefDispBuff2 = 0x80048608;
GsSetRefView2 = 0x80048688;
scale_view_param = 0x80048a5c; // allow_duplicated:True
select_max_param = 0x80048b4c; // allow_duplicated:True
len_param = 0x80048c14; // allow_duplicated:True
GsSetView2 = 0x80048c30;
GsGetLw = 0x80048d98;
GsGetLs = 0x80049060;
GsGetLws = 0x80049338;
GsScaleScreen = 0x80049658;
GsSetRefView2L = 0x80049780;
GsGetLsUnit = 0x80049d90;
GsGetLwsUnit = 0x8004a068;
GsGetLwUnit = 0x8004a388;
GsMapJntMIMe = 0x8004a650;
GsMapRstJntMIMe = 0x8004a6ec;
GsMapNrmMIMe = 0x8004a760;
GsMapRstNrmMIMe = 0x8004a890;
GsMapUnit = 0x8004a9a8;
GsMapVtxMIMe = 0x8004ab48;
GsMapRstVtxMIMe = 0x8004ac78;
GsInitCoordinate2 = 0x8004ad90;
GsInitCoord2param = 0x8004ae0c;
GsSetLsMatrix = 0x8004ae38;
GsSetLightMatrix = 0x8004ae68;
GsSetLightMatrix2 = 0x8004af04;
GsMulCoord0 = 0x8004af38;
GsMulCoord2 = 0x8004afcc;
GsMulCoord3 = 0x8004b050;
print_matrix = 0x8004b0d4;
print_vector = 0x8004b144;
GsSortObject4 = 0x8004b178;
GsSortObject4J = 0x8004ba10;
GsLinkObject4 = 0x8004c2a8;
GsLinkObject3 = 0x8004c428;
GsSortObject3 = 0x8004c4ac;
GsSortObject5 = 0x8004c7e8;
GsSortObject5J = 0x8004d9c0;
dmyGsPrstF3NL = 0x8004eb98;
dmyGsPrstF3LFG = 0x8004ebe8;
dmyGsPrstF3L = 0x8004ec38;
dmyGsPrstNF3 = 0x8004ec88;
dmyGsTMDdivF3NL = 0x8004ecd8;
dmyGsTMDdivF3LFG = 0x8004ed28;
dmyGsTMDdivF3L = 0x8004ed78;
dmyGsTMDdivNF3 = 0x8004edc8;
dmyGsPrstG3NL = 0x8004ee18;
dmyGsPrstG3LFG = 0x8004ee68;
dmyGsPrstG3L = 0x8004eeb8;
dmyGsPrstNG3 = 0x8004ef08;
dmyGsTMDdivG3NL = 0x8004ef58;
dmyGsTMDdivG3LFG = 0x8004efa8;
dmyGsTMDdivG3L = 0x8004eff8;
dmyGsTMDdivNG3 = 0x8004f048;
dmyGsPrstTF3NL = 0x8004f098;
dmyGsPrstTF3LFG = 0x8004f0e8;
dmyGsPrstTF3L = 0x8004f138;
dmyGsPrstTNF3 = 0x8004f188;
dmyGsTMDdivTF3NL = 0x8004f1d8;
dmyGsTMDdivTF3LFG = 0x8004f228;
dmyGsTMDdivTF3L = 0x8004f278;
dmyGsTMDdivTNF3 = 0x8004f2c8;
dmyGsPrstTG3NL = 0x8004f318;
dmyGsPrstTG3LFG = 0x8004f368;
dmyGsPrstTG3L = 0x8004f3b8;
dmyGsPrstTNG3 = 0x8004f408;
dmyGsTMDdivTG3NL = 0x8004f458;
dmyGsTMDdivTG3LFG = 0x8004f4a8;
dmyGsTMDdivTG3L = 0x8004f4f8;
dmyGsTMDdivTNG3 = 0x8004f548;
dmyGsPrstF4NL = 0x8004f598;
dmyGsPrstF4LFG = 0x8004f5e8;
dmyGsPrstF4L = 0x8004f638;
dmyGsPrstNF4 = 0x8004f688;
dmyGsTMDdivF4NL = 0x8004f6d8;
dmyGsTMDdivF4LFG = 0x8004f728;
dmyGsTMDdivF4L = 0x8004f778;
dmyGsTMDdivNF4 = 0x8004f7c8;
dmyGsPrstG4NL = 0x8004f818;
dmyGsPrstG4LFG = 0x8004f868;
dmyGsPrstG4L = 0x8004f8b8;
dmyGsPrstNG4 = 0x8004f908;
dmyGsTMDdivG4NL = 0x8004f958;
dmyGsTMDdivG4LFG = 0x8004f9a8;
dmyGsTMDdivG4L = 0x8004f9f8;
dmyGsTMDdivNG4 = 0x8004fa48;
dmyGsPrstTF4NL = 0x8004fa98;
dmyGsPrstTF4LFG = 0x8004fae8;
dmyGsPrstTF4L = 0x8004fb38;
dmyGsPrstTNF4 = 0x8004fb88;
dmyGsTMDdivTF4NL = 0x8004fbd8;
dmyGsTMDdivTF4LFG = 0x8004fc28;
dmyGsTMDdivTF4L = 0x8004fc78;
dmyGsTMDdivTNF4 = 0x8004fcc8;
dmyGsPrstTG4NL = 0x8004fd18;
dmyGsPrstTG4LFG = 0x8004fd68;
dmyGsPrstTG4L = 0x8004fdb8;
dmyGsPrstTNG4 = 0x8004fe08;
dmyGsTMDdivTG4NL = 0x8004fe58;
dmyGsTMDdivTG4LFG = 0x8004fea8;
dmyGsTMDdivTG4L = 0x8004fef8;
dmyGsTMDdivTNG4 = 0x8004ff48;
dmyGsTMDfastF3NL = 0x8004ff98;
dmyGsTMDfastF3LFG = 0x8004ffe8;
dmyGsTMDfastF3L = 0x80050038;
dmyGsTMDfastNF3 = 0x80050088;
dmyGsTMDfastG3NL = 0x800500d8;
dmyGsTMDfastG3LFG = 0x80050128;
dmyGsTMDfastG3L = 0x80050178;
dmyGsTMDfastNG3 = 0x800501c8;
dmyGsTMDfastTF3NL = 0x80050218;
dmyGsTMDfastTF3LFG = 0x80050268;
dmyGsTMDfastTF3L = 0x800502b8;
dmyGsTMDfastTNF3 = 0x80050308;
dmyGsTMDfastTG3NL = 0x80050358;
dmyGsTMDfastTG3LFG = 0x800503a8;
dmyGsTMDfastTG3L = 0x800503f8;
dmyGsTMDfastTNG3 = 0x80050448;
dmyGsTMDfastF4NL = 0x80050498;
dmyGsTMDfastF4LFG = 0x800504e8;
dmyGsTMDfastF4L = 0x80050538;
dmyGsTMDfastNF4 = 0x80050588;
dmyGsTMDfastG4NL = 0x800505d8;
dmyGsTMDfastG4LFG = 0x80050628;
dmyGsTMDfastG4L = 0x80050678;
dmyGsTMDfastNG4 = 0x800506c8;
dmyGsTMDfastTF4NL = 0x80050718;
dmyGsTMDfastTF4LFG = 0x80050768;
dmyGsTMDfastTF4L = 0x800507b8;
dmyGsTMDfastTNF4 = 0x80050808;
dmyGsTMDfastTG4NL = 0x80050858;
dmyGsTMDfastTG4LFG = 0x800508a8;
dmyGsTMDfastTG4L = 0x800508f8;
dmyGsTMDfastTNG4 = 0x80050948;
dmyGsTMDfastF3GL = 0x80050998;
dmyGsTMDfastF3GLFG = 0x800509e8;
dmyGsTMDfastF3GNL = 0x80050a38;
dmyGsTMDfastG3GL = 0x80050a88;
dmyGsTMDfastG3GLFG = 0x80050ad8;
dmyGsTMDfastG3GNL = 0x80050b28;
dmyGsPrstF3GL = 0x80050b78;
dmyGsPrstF3GLFG = 0x80050bc8;
dmyGsPrstF3GNL = 0x80050c18;
dmyGsPrstG3GL = 0x80050c68;
dmyGsPrstG3GLFG = 0x80050cb8;
dmyGsPrstG3GNL = 0x80050d08;
GsLinkObject5 = 0x80050d58;
GsPresetObject = 0x80050d74;
GsSetRefViewLUnit = 0x800516c0;
GsSetRefViewUnit = 0x80051cd0;
scale_view_param = 0x800520a4; // allow_duplicated:True
select_max_param = 0x80052194; // allow_duplicated:True
len_param = 0x8005225c; // allow_duplicated:True
GsScanUnit = 0x80052278;
GsGetHeadpUnit = 0x80052438;
GsSortUnit = 0x80052448;
GsSetViewUnit = 0x80052570;
GsU_00000008 = 0x800526d8;
GsU_00000009 = 0x80052858;
GsU_0000000a = 0x800529e8;
GsU_0000000b = 0x80052b98;
GsU_0000000c = 0x80052d58;
GsU_0000000d = 0x80052f18;
GsU_0000000e = 0x800530e8;
GsU_0000000f = 0x800532b8;
GsU_00000010 = 0x80053498;
GsU_00000011 = 0x80053648;
GsU_00000012 = 0x80053818;
GsU_00000013 = 0x80053a08;
GsU_00000014 = 0x80053c18;
GsU_00000015 = 0x80053e28;
GsU_00000016 = 0x80054058;
GsU_00000017 = 0x80054278;
GsU_00000018 = 0x800544c8;
GsU_00000019 = 0x80054738;
GsU_0000001c = 0x800549c8;
GsU_0000001d = 0x80054c98;
GsU_00000209 = 0x80054f98;
GsU_0000020d = 0x80055138;
GsU_00000211 = 0x80055318;
GsU_00000215 = 0x800554f8;
GsU_00010008 = 0x80055738;
GsU_00010009 = 0x800559c8;
GsU_0001000c = 0x80055c98;
GsU_0001000d = 0x80055f30;
GsU_00010010 = 0x80056200;
GsU_00010011 = 0x800564b0;
GsU_00010014 = 0x800567a8;
GsU_00010015 = 0x80056aa0;
GsU_00020008 = 0x80056df0;
GsU_00020009 = 0x80056f70;
GsU_0002000c = 0x80057100;
GsU_0002000d = 0x800572c0;
GsU_00020010 = 0x80057490;
GsU_00020011 = 0x80057640;
GsU_00020014 = 0x80057810;
GsU_00020015 = 0x80057a20;
GsU_00030008 = 0x80057c50;
GsU_00030009 = 0x80057ee0;
GsU_0003000c = 0x800581b0;
GsU_0003000d = 0x80058448;
GsU_00030010 = 0x80058718;
GsU_00030011 = 0x800589d0;
GsU_00030014 = 0x80058cd0;
GsU_00030015 = 0x80058fe0;
GsU_00040048 = 0x80059350;
GsU_00040049 = 0x800594c0;
GsU_0004004c = 0x80059640;
GsU_0004004d = 0x800597b0;
GsU_00040050 = 0x80059940;
GsU_00040051 = 0x80059ae0;
GsU_00040054 = 0x80059c90;
GsU_00040055 = 0x80059e60;
GsU_00040058 = 0x8005a030;
GsU_00040059 = 0x8005a260;
GsU_0004005c = 0x8005a4b0;
GsU_0004005d = 0x8005a700;
GsU_00040148 = 0x8005a970;
GsU_00040149 = 0x8005aae0;
GsU_0004014c = 0x8005ac40;
GsU_0004014d = 0x8005adb0;
GsU_00040150 = 0x8005af20;
GsU_00040151 = 0x8005b0c0;
GsU_00040154 = 0x8005b260;
GsU_00040155 = 0x8005b410;
GsU_00050048 = 0x8005b5b0;
GsU_00050049 = 0x8005b7f8;
GsU_0005004c = 0x8005ba78;
GsU_0005004d = 0x8005bce0;
GsU_00050050 = 0x8005bf80;
GsU_00050051 = 0x8005c218;
GsU_00050054 = 0x8005c4e8;
GsU_00050055 = 0x8005c7a8;
GsU_0044014d = 0x8005caa8;
Clip3FP = 0x8005cc78;
Clip4FP = 0x8005cce8;
Clip3F = 0x8005cd60;
Clip4F = 0x8005cea8;
ClipF = 0x8005d018;
ZClipF = 0x8005d800;
Clip3FTP = 0x8005d8c8;
Clip4FTP = 0x8005d950;
Clip3FT = 0x8005d9e8;
Clip4FT = 0x8005db58;
ClipFT = 0x8005dd04;
ZClipFT = 0x8005e504;
Clip3GP = 0x8005e620;
Clip4GP = 0x8005e6a8;
Clip3G = 0x8005e740;
Clip4G = 0x8005e8e4;
ClipG = 0x8005ead4;
ZClipG = 0x8005f2d4;
Clip3GTP = 0x8005f3f0;
Clip4GTP = 0x8005f490;
Clip3GT = 0x8005f548;
Clip4GT = 0x8005f718;
ClipGT = 0x8005f948;
ZClipGT = 0x80060148;
InitClip = 0x80060280;
RotTransPers4 = 0x800603a8;
RotAverage3 = 0x80060428;
RotAverage4 = 0x80060488;
RotNclip = 0x80060508;
RotNclip3 = 0x80060538;
RotNclip4 = 0x800605c8;
RotAverageNclip3 = 0x80060678;
RotAverageNclip4 = 0x80060708;
RotAverageNclipColorDpq3 = 0x800607b8;
RotAverageNclipColorCol3 = 0x80060888;
ColorMatDpq = 0x80060958;
ColorMatCol = 0x80060998;
RotColorDpq = 0x800609d8;
RotColorDpq3 = 0x80060a28;
RotColorMatDpq = 0x80060ac8;
RotAverageNclip3_1 = 0x80060b38;
RotTransPersN = 0x80060bd8;
RotTransPers3N = 0x80060c48;
RotAverageNclipColorDpq3_1 = 0x80060cc8;
RotMatrixC = 0x80060dc8;
csincos = 0x80060f98;
ccos = 0x800610b8;
csin_1 = 0x80061180;
csin = 0x80061220;
cln_1 = 0x80061358;
cln = 0x800613f0;
csqrt_1 = 0x800614d8;
csqrt = 0x8006162c;
catan = 0x800616c8;
RCpolyF3 = 0x800617a0;
RCpolyF3A = 0x800617a8;
RCpolyF4 = 0x80061b10;
RCpolyF4A = 0x80061b18;
RCpolyFT3 = 0x80061f90;
RCpolyFT3A = 0x80061f98;
RCpolyFT4 = 0x80062390;
RCpolyFT4A = 0x80062398;
RCpolyG3 = 0x800628b0;
RCpolyG3A = 0x800628b8;
RCpolyG4 = 0x80062cc0;
RCpolyG4A = 0x80062cc8;
RCpolyGT3 = 0x80063210;
RCpolyGT3A = 0x80063218;
RCpolyGT4 = 0x800636b0;
RCpolyGT4A = 0x800636b8;
DivPloyFT4 = 0x80063cd0;
GsTMDdivF3L = 0x80064190;
GsTMDdivF3LFG = 0x800643c8;
GsTMDdivF3NL = 0x80064600;
GsTMDdivNF3 = 0x800647e8;
DivideF3 = 0x800649d0;
GsTMDdivF3LB = 0x80064b20;
GsTMDdivF3LFGB = 0x80064d38;
GsTMDdivF3NLB = 0x80064f58;
GsTMDdivNF3B = 0x80065148;
GsTMDdivF4L = 0x80065338;
GsTMDdivF4LFG = 0x800655a0;
GsTMDdivF4NL = 0x80065810;
GsTMDdivNF4 = 0x80065a48;
DivideF4 = 0x80065c88;
GsTMDdivF4LB = 0x80065e18;
GsTMDdivF4LFGB = 0x80066070;
GsTMDdivF4NLB = 0x800662d0;
GsTMDdivNF4B = 0x80066500;
GsTMDdivTF3L = 0x80066738;
GsTMDdivTF3LFG = 0x80066a30;
GsTMDdivTF3NL = 0x80066d30;
GsTMDdivTNF3 = 0x80066fb8;
DivideFT3 = 0x80067240;
GsTMDdivTF3LB = 0x800673e0;
GsTMDdivTF3LFGB = 0x80067620;
GsTMDdivTF3NLB = 0x80067860;
GsTMDdivTNF3B = 0x80067a80;
GsTMDdivTF4L = 0x80067ca8;
GsTMDdivTF4LFG = 0x80067f48;
GsTMDdivTF4NL = 0x800681e8;
GsTMDdivTNF4 = 0x80068468;
DivideFT4 = 0x800686f0;
GsTMDdivTF4LB = 0x800688e8;
GsTMDdivTF4LFGB = 0x80068b78;
GsTMDdivTF4NLB = 0x80068e10;
GsTMDdivTNF4B = 0x80069088;
GsTMDdivTF4LM = 0x80069300;
GsTMDdivTF4LFGM = 0x800696d8;
GsTMDdivTF4NLM = 0x80069ab0;
GsTMDdivTNF4M = 0x80069e68;
GsTMDdivG3L = 0x8006a228;
GsTMDdivG3LFG = 0x8006a470;
GsTMDdivG3NL = 0x8006a6b8;
GsTMDdivNG3 = 0x8006a8b0;
DivideG3 = 0x8006aab0;
GsTMDdivG3LB = 0x8006ac30;
GsTMDdivG3LFGB = 0x8006ae78;
GsTMDdivG3NLB = 0x8006b0c8;
GsTMDdivNG3B = 0x8006b2c8;
GsTMDdivG4L = 0x8006b4c8;
GsTMDdivG4LFG = 0x8006b770;
GsTMDdivG4NL = 0x8006ba30;
GsTMDdivNG4 = 0x8006bc88;
DivideG4 = 0x8006bee8;
GsTMDdivG4LB = 0x8006c0b8;
GsTMDdivG4LFGB = 0x8006c360;
GsTMDdivG4NLB = 0x8006c618;
GsTMDdivNG4B = 0x8006c868;
GsTMDdivTG3L = 0x8006cab8;
GsTMDdivTG3LFG = 0x8006cd30;
GsTMDdivTG3NL = 0x8006cfa8;
GsTMDdivTNG3 = 0x8006d1d8;
DivideGT3 = 0x8006d418;
GsTMDdivTG3LB = 0x8006d5f0;
GsTMDdivTG3LFGB = 0x8006d858;
GsTMDdivTG3NLB = 0x8006dac8;
GsTMDdivTNG3B = 0x8006dcf8;
GsTMDdivTG4L = 0x8006df30;
GsTMDdivTG4LFG = 0x8006e218;
GsTMDdivTG4NL = 0x8006e518;
GsTMDdivTNG4 = 0x8006e7a0;
DivideGT4 = 0x8006ea48;
GsTMDdivTG4LB = 0x8006ec88;
GsTMDdivTG4LFGB = 0x8006ef68;
GsTMDdivTG4NLB = 0x8006f250;
GsTMDdivTNG4B = 0x8006f4d0;
GsTMDdivTG4LM = 0x8006f768;
GsTMDdivTG4LFGM = 0x8006fb88;
GsTMDdivTG4NLM = 0x8006ffc0;
GsTMDdivTNG4M = 0x80070380;
GsTMDfastNF3B = 0x80070760;
GsTMDfastF3NLB = 0x80070888;
GsTMDfastF3LB = 0x800709b4;
GsTMDfastF3LFGB = 0x80070ae8;
GsTMDfastNF3 = 0x80070c20;
GsTMDfastF3NL = 0x80070d5c;
GsTMDfastF3L = 0x80070e9c;
GsTMDfastF3LFG = 0x80070fe4;
GsTMDfastNF4B = 0x80071130;
GsTMDfastF4NLB = 0x80071284;
GsTMDfastF4LB = 0x800713dc;
GsTMDfastF4LFGB = 0x80071540;
GsTMDfastNF4 = 0x800716b0;
GsTMDfastF4NL = 0x80071818;
GsTMDfastF4L = 0x80071984;
GsTMDfastF4LFG = 0x80071afc;
GsTMDfastNF4D = 0x80071c80;
GsTMDfastF4NLD = 0x80071dfc;
GsTMDfastF4LD = 0x80071f7c;
GsTMDfastF4LFGD = 0x80072108;
TransposeMatrix = 0x800722a0;
RotMatrix = 0x800722e0;
RotMatrixYXZ = 0x80072570;
RotMatrixZYX = 0x80072800;
RotMatrixX = 0x80072a90;
RotMatrixY = 0x80072c30;
RotMatrixZ = 0x80072dd0;
rcossin = 0x80072f70;
SetFogFar = 0x80072fe0;
SetFogNear = 0x80073040;
SetFogNearFar = 0x800730a8;
GsTMDfastTNF3B = 0x800731b8;
GsTMDfastTF3NLB = 0x80073310;
GsTMDfastTF3LB = 0x80073460;
GsTMDfastTF3LFGB = 0x800735bc;
GsTMDfastTNF3 = 0x80073718;
GsTMDfastTF3NL = 0x80073884;
GsTMDfastTF3L = 0x800739e8;
GsTMDfastTF3LFG = 0x80073b58;
GsTMDfastTNF4B = 0x80073cc8;
GsTMDfastTF4NLB = 0x80073e54;
GsTMDfastTF4LB = 0x80073fdc;
GsTMDfastTF4LFGB = 0x80074174;
GsTMDfastTNF4M = 0x80074318;
GsTMDfastTF4NLM = 0x80074608;
GsTMDfastTF4LM = 0x800748f8;
GsTMDfastTF4LFGM = 0x80074bf8;
GsTMDfastTNF4 = 0x80074ef8;
GsTMDfastTF4NL = 0x80075098;
GsTMDfastTF4L = 0x80075234;
GsTMDfastTF4LFG = 0x800753e0;
GsTMDfastTNF4D = 0x80075598;
GsTMDfastTF4NLD = 0x8007574c;
GsTMDfastTF4LD = 0x800758fc;
GsTMDfastTF4LFGD = 0x80075abc;
GsTMDfastNG3B = 0x80075c88;
GsTMDfastG3NLB = 0x80075dbc;
GsTMDfastG3LB = 0x80075ee8;
GsTMDfastG3LFGB = 0x80076064;
GsTMDfastNG3 = 0x800761e8;
GsTMDfastG3NL = 0x80076330;
GsTMDfastG3L = 0x80076470;
GsTMDfastG3LFG = 0x80076600;
GsTMDfastNG4B = 0x80076798;
GsTMDfastG4NLB = 0x80076904;
GsTMDfastG4LB = 0x80076a64;
GsTMDfastG4LFGB = 0x80076c30;
GsTMDfastNG4 = 0x80076e08;
GsTMDfastG4NL = 0x80076f88;
GsTMDfastG4L = 0x800770fc;
GsTMDfastG4LFG = 0x800772dc;
GsTMDfastNG4D = 0x800774c8;
GsTMDfastG4NLD = 0x8007765c;
GsTMDfastG4LD = 0x800777e4;
GsTMDfastG4LFGD = 0x800779d8;
rsin = 0x80077bd8;
sin_1 = 0x80077c14;
rcos = 0x80077ca8;
EigenMatrix = 0x80077d48;
IsIdMatrix = 0x80078138;
MatrixNormal_0 = 0x80078208;
MatrixNormal_1 = 0x80078328;
MatrixNormal_2 = 0x80078448;
RotMatrixZYX_C = 0x80078568;
RotMatrix_C = 0x80078738;
RotMatrixYXZ_C = 0x80078908;
RotMatrixX_C = 0x80078ad8;
RotMatrixY_C = 0x80078c4c;
RotMatrixZ_C = 0x80078dc0;
GsTMDfastTNG3B = 0x80078f38;
GsTMDfastTG3NLB = 0x8007909c;
GsTMDfastTG3LB = 0x800791e4;
GsTMDfastTG3LFGB = 0x80079384;
GsTMDfastTNG3_FLIP = 0x80079528;
GsTMDfastTG3NL_FLIP = 0x800796a0;
GsTMDfastTG3L_FLIP = 0x800797fc;
GsTMDfastTG3LFG_FLIP = 0x800799b0;
GsTMDfastTNG3 = 0x80079b68;
GsTMDfastTG3NL = 0x80079ce0;
GsTMDfastTG3L = 0x80079e3c;
GsTMDfastTG3LFG = 0x80079ff0;
GsTMDfastTNG4B = 0x8007a1a8;
GsTMDfastTG4NLB = 0x8007a350;
GsTMDfastTG4LB = 0x8007a4d4;
GsTMDfastTG4LFGB = 0x8007a6cc;
GsTMDfastTNG4M = 0x8007a8c8;
GsTMDfastTG4NLM = 0x8007abd8;
GsTMDfastTG4LM = 0x8007aeb8;
GsTMDfastTG4LFGM = 0x8007b218;
GsTMDfastTNG4 = 0x8007b578;
GsTMDfastTG4NL = 0x8007b734;
GsTMDfastTG4L = 0x8007b8cc;
GsTMDfastTG4LFG = 0x8007bad8;
GsTMDfastTNG4D = 0x8007bce8;
GsTMDfastTG4NLD = 0x8007beb8;
GsTMDfastTG4LD = 0x8007c064;
GsTMDfastTG4LFGD = 0x8007c284;
RotMeshH = 0x8007c4a8;
InitGeom = 0x8007c550;
SquareRoot0 = 0x8007c5d8;
InvSquareRoot = 0x8007c668;
VectorNormalS = 0x8007c6f4;
VectorNormal = 0x8007c708;
VectorNormalSS = 0x8007c734;
MatrixNormal = 0x8007c820;
InterpolShort = 0x8007c908;
InterpolByte = 0x8007c988;
gteMIMefunc = 0x8007c9d8;
LoadAverage12 = 0x8007ca58;
LoadAverage0 = 0x8007caa8;
LoadAverageShort12 = 0x8007caf8;
LoadAverageShort0 = 0x8007cb80;
LoadAverageByte = 0x8007cc08;
LoadAverageCol = 0x8007cc68;
p2otz = 0x8007cce8;
otz2p = 0x8007cd50;
SquareRoot12 = 0x8007cde0;
MulMatrix0 = 0x8007ce80;
MulRotMatrix = 0x8007cf90;
MulRotMatrix0 = 0x8007d080;
CompMatrix = 0x8007d170;
ApplyMatrixLV = 0x8007d2d0;
ApplyRotMatrix = 0x8007d430;
PushMatrix = 0x8007d460;
PopMatrix = 0x8007d500;
ReadLightMatrix = 0x8007d5a0;
ReadColorMatrix = 0x8007d5f0;
ReadRotMatrix = 0x8007d640;
ScaleMatrixL = 0x8007d690;
SetMulMatrix = 0x8007d7c0;
CompMatrixLV = 0x8007d8d0;
ApplyRotMatrixLV = 0x8007db20;
SetMulRotMatrix = 0x8007dc60;
MulMatrix = 0x8007dd50;
MulMatrix2 = 0x8007de60;
ApplyMatrix = 0x8007df70;
ApplyMatrixSV = 0x8007dfc0;
TransMatrix = 0x8007e020;
ScaleMatrix = 0x8007e050;
SetRotMatrix = 0x8007e180;
SetLightMatrix = 0x8007e1b0;
SetColorMatrix = 0x8007e1e0;
SetTransMatrix = 0x8007e210;
RotNMD_F3 = 0x8007e230;
RotNMD_G3 = 0x8007e308;
RotNMD_FT3 = 0x8007e3e0;
RotNMD_GT3 = 0x8007e4d0;
RotNMD_F4 = 0x8007e5c0;
RotNMD_G4 = 0x8007e6ac;
RotNMD_FT4 = 0x8007e798;
RotNMD_GT4 = 0x8007e89c;
RotNMD_SV_F3 = 0x8007e9a0;
RotNMD_SV_G3 = 0x8007eaac;
RotNMD_SV_FT3 = 0x8007ebb8;
RotNMD_SV_GT3 = 0x8007ecdc;
RotNMD_SV_F4 = 0x8007ee00;
RotNMD_SV_G4 = 0x8007ef2c;
RotNMD_SV_FT4 = 0x8007f058;
RotNMD_SV_GT4 = 0x8007f19c;
RotTransPers_nom = 0x8007f2e0;
RotTransPers3_nom = 0x8007f2f8;
RotTrans_nom = 0x8007f320;
RotTransPers4_nom = 0x8007f338;
RotAverage3_nom = 0x8007f378;
RotNclip3_nom = 0x8007f3a8;
RotAverageNclip3_nom = 0x8007f3d8;
RotColorDpq_nom = 0x8007f40c;
RotColorDpq3_nom = 0x8007f43c;
RotAverageNclipColorDpq3_nom = 0x8007f4a4;
RotAverageNclipColorCol3_nom = 0x8007f514;
NormalColor_nom = 0x8007f584;
NormalColor3_nom = 0x8007f59c;
NormalColorDpq_nom = 0x8007f5c4;
NormalColorDpq3_nom = 0x8007f5e4;
NormalColorCol_nom = 0x8007f614;
NormalColorCol3_nom = 0x8007f630;
_patch_gte = 0x8007f660;
PhongLine = 0x8007f700;
RotPMD_F3 = 0x8007f9f0;
RotPMD_G3 = 0x8007fae0;
RotPMD_FT3 = 0x8007fbd0;
RotPMD_GT3 = 0x8007fcd8;
RotPMD_F4 = 0x8007fde0;
RotPMD_G4 = 0x8007fecc;
RotPMD_FT4 = 0x8007ffb8;
RotPMD_GT4 = 0x800800bc;
RotPMD_SV_F3 = 0x800801c0;
RotPMD_SV_G3 = 0x800802cc;
RotPMD_SV_FT3 = 0x800803d8;
RotPMD_SV_GT3 = 0x800804fc;
RotPMD_SV_F4 = 0x80080620;
RotPMD_SV_G4 = 0x8008074c;
RotPMD_SV_FT4 = 0x80080878;
RotPMD_SV_GT4 = 0x800809bc;
min4 = 0x80080b00;
max4 = 0x80080b50;
sort_vertex = 0x80080ba0;
sort_vertex2 = 0x80080da8;
get_fslant_edge = 0x80080fb4;
maxabs = 0x80081154;
pers_map = 0x800811a8;
near_clip = 0x80081724;
devide = 0x80081db4;
copyVECTOR = 0x80081e80;
map_sq = 0x80081ea4;
inv_mat = 0x800825bc;
cofactor = 0x80082644;
ScanXY0 = 0x80082740;
GsPrstNF3 = 0x80082a30;
GsPrstF3NL = 0x80082b50;
GsPrstF3L = 0x80082c74;
GsPrstF3LFG = 0x80082da8;
GsPrstNF4 = 0x80082ee0;
GsPrstF4NL = 0x8008302c;
GsPrstF4L = 0x8008317c;
GsPrstF4LFG = 0x800832e0;
GsPrstNF4D = 0x80083450;
GsPrstF4NLD = 0x800835a8;
GsPrstF4LD = 0x80083704;
GsPrstF4LFGD = 0x80083874;
GsPrstTNF3 = 0x800839f0;
GsPrstTF3NL = 0x80083b10;
GsPrstTF3L = 0x80083c34;
GsPrstTF3LFG = 0x80083d7c;
GsPrstTNF4 = 0x80083ed0;
GsPrstTF4NL = 0x8008401c;
GsPrstTF4L = 0x8008416c;
GsPrstTF4LFG = 0x800842e4;
GsPrstTNF4D = 0x80084460;
GsPrstTF4NLD = 0x800845b8;
GsPrstTF4LD = 0x80084714;
GsPrstTF4LFGD = 0x80084898;
GsPrstNG3 = 0x80084a20;
GsPrstG3NL = 0x80084b40;
GsPrstG3L = 0x80084c5c;
GsPrstG3LFG = 0x80084ddc;
GsPrstNG4 = 0x80084f60;
GsPrstG4NL = 0x800850ac;
GsPrstG4L = 0x800851f8;
GsPrstG4LFG = 0x800853c4;
GsPrstNG4D = 0x80085590;
GsPrstG4NLD = 0x800856e8;
GsPrstG4LD = 0x80085840;
GsPrstG4LFGD = 0x80085a1c;
GsPrstTNG3 = 0x80085c00;
GsPrstTG3NL = 0x80085d20;
GsPrstTG3L = 0x80085e3c;
GsPrstTG3LFG = 0x80085fd0;
GsPrstTNG4 = 0x80086170;
GsPrstTG4NL = 0x800862bc;
GsPrstTG4L = 0x80086408;
GsPrstTG4LFG = 0x800865e8;
GsPrstTNG4D = 0x800867d0;
GsPrstTG4NLD = 0x80086928;
GsPrstTG4LD = 0x80086a80;
GsPrstTG4LFGD = 0x80086c70;
ratan2 = 0x80086e60;
SetRGBcd = 0x80086fe0;
ReadOTZ = 0x80086ff0;
ReadIR0 = 0x80086ffc;
ReadIR123 = 0x80087008;
ReadSZ2 = 0x8008701c;
ReadMac0 = 0x80087028;
ReadMAC123 = 0x80087034;
ReadORGB = 0x80087048;
ReadLZC = 0x80087078;
ReadFLAG = 0x80087084;
SetVertex0 = 0x80087090;
SetVertex1 = 0x800870a0;
SetVertex2 = 0x800870b0;
SetVertexTri = 0x800870c0;
SetRGBfifo = 0x800870e0;
SetIR123 = 0x800870f4;
SetIR0 = 0x80087108;
SetSZfifo3 = 0x80087114;
SetSZfifo4 = 0x80087128;
SetSXSYfifo = 0x80087140;
SetRii = 0x80087154;
SetMAC123 = 0x80087168;
SetData32 = 0x8008717c;
SetDQA = 0x80087188;
SetDQB = 0x80087194;
ReadSZfifo3 = 0x800871a0;
ReadSZfifo4 = 0x800871c0;
ReadSXSYfifo = 0x800871e0;
ReadRGBfifo = 0x80087200;
ReadGeomOffset = 0x80087220;
ReadGeomScreen = 0x80087240;
SetBackColor = 0x80087250;
SetFarColor = 0x80087270;
SetGeomOffset = 0x80087290;
SetGeomScreen = 0x800872b0;
RotRMD_F3 = 0x800872c0;
RotRMD_G3 = 0x80087490;
RotRMD_FT3 = 0x80087660;
RotRMD_GT3 = 0x80087830;
RotRMD_F4 = 0x80087a00;
RotRMD_G4 = 0x80087c20;
RotRMD_FT4 = 0x80087e40;
RotRMD_GT4 = 0x80088060;
RotRMD_SV_F3 = 0x80088280;
RotRMD_SV_G3 = 0x80088460;
RotRMD_SV_FT3 = 0x80088640;
RotRMD_SV_GT3 = 0x80088820;
RotRMD_SV_F4 = 0x80088a00;
RotRMD_SV_G4 = 0x80088c60;
RotRMD_SV_FT4 = 0x80088ec0;
RotRMD_SV_GT4 = 0x80089120;
RotMeshPrimQ_T = 0x80089380;
RotMeshPrimR_FC3 = 0x80089b90;
RotMeshPrimR_FCT3 = 0x80089d70;
RotMeshPrimR_F3 = 0x80089f00;
RotMeshPrimR_FT3 = 0x8008a100;
RotMeshPrimR_GC3 = 0x8008a300;
RotMeshPrimR_GCT3 = 0x8008a510;
RotMeshPrimR_G3 = 0x8008a6c0;
RotMeshPrimR_GT3 = 0x8008a900;
RotMeshPrimR_T3 = 0x8008ab40;
RotMeshPrimS_FC3 = 0x8008ad20;
RotMeshPrimS_FCT3 = 0x8008aed0;
RotMeshPrimS_F3 = 0x8008b030;
RotMeshPrimS_FT3 = 0x8008b200;
RotMeshPrimS_GC3 = 0x8008b3d0;
RotMeshPrimS_GCT3 = 0x8008b5a0;
RotMeshPrimS_G3 = 0x8008b700;
RotMeshPrimS_GT3 = 0x8008b8f0;
RotMeshPrimS_T3 = 0x8008bae0;
RotSMD_F3 = 0x8008bc90;
RotSMD_G3 = 0x8008be70;
RotSMD_FT3 = 0x8008c050;
RotSMD_GT3 = 0x8008c230;
RotSMD_F4 = 0x8008c410;
RotSMD_G4 = 0x8008c640;
RotSMD_FT4 = 0x8008c870;
RotSMD_GT4 = 0x8008caa0;
RotSMD_SV_F3 = 0x8008ccd0;
RotSMD_SV_G3 = 0x8008cec0;
RotSMD_SV_FT3 = 0x8008d0b0;
RotSMD_SV_GT3 = 0x8008d2a0;
RotSMD_SV_F4 = 0x8008d490;
RotSMD_SV_G4 = 0x8008d700;
RotSMD_SV_FT4 = 0x8008d970;
RotSMD_SV_GT4 = 0x8008dbe0;
LightColor = 0x8008de50;
DpqColorLight = 0x8008de78;
DpqColor3 = 0x8008dea0;
Intpl = 0x8008dedc;
Square12 = 0x8008df00;
Square0 = 0x8008df28;
AverageZ3 = 0x8008df50;
AverageZ4 = 0x8008df70;
OuterProduct12 = 0x8008df94;
OuterProduct0 = 0x8008dfec;
Lzc = 0x8008e044;
RotTransSV = 0x8008e060;
SquareSS12 = 0x8008e090;
SquareSS0 = 0x8008e0c8;
SquareSL12 = 0x8008e100;
SquareSL0 = 0x8008e130;
RotTransPers = 0x8008e160;
RotTransPers3 = 0x8008e190;
RotTrans = 0x8008e1f0;
NormalClip = 0x8008e220;
NormalClipS = 0x8008e250;
LocalLight = 0x8008e260;
DpqColor = 0x8008e284;
NormalColor = 0x8008e2a0;
NormalColor3 = 0x8008e2bc;
NormalColorDpq = 0x8008e2f8;
NormalColorDpq3 = 0x8008e31c;
NormalColorCol = 0x8008e364;
NormalColorCol3 = 0x8008e384;
ColorDpq = 0x8008e3c8;
ColorCol = 0x8008e3f0;
AverageSZ3 = 0x8008e414;
AverageSZ4 = 0x8008e424;
SubPol4 = 0x8008e440;
SubPol3 = 0x8008ec1c;
gte_scope_f3 = 0x8008f380;
gte_scope_tf3 = 0x8008f49c;
gte_scope_g3 = 0x8008f5a0;
gte_scope_tg3 = 0x8008f6c0;
gte_flat3 = 0x8008f7e0;
gte_texture_flat3 = 0x8008f8dc;
gte_gouraud3 = 0x8008f9fc;
gte_texture_gouraud3 = 0x8008fb48;
gte_flat_fog3 = 0x8008fcac;
gte_texture_flat_fog3 = 0x8008fda0;
gte_gouraud_fog3 = 0x8008fec0;
gte_texture_gouraud_fog3 = 0x80090000;
gte_scope_tf4_B = 0x80090164;
gte_scope_tf4 = 0x800902d8;
TransRot_32 = 0x80090430;
TransRotPers = 0x800905d0;
TransRotPers3 = 0x80090644;
ApplyTransposeMatrixLV = 0x80090728;
RemoveGUN = 0x80091024;
StartGun = 0x800911bc;
StopGun = 0x800911cc;
SelectGUN = 0x800911d8;
StartGUN = 0x800913a8;
StopGUN = 0x80091428;
InitGUN = 0x8009146c;
SendGUN = 0x8009150c;
EnableGUN = 0x8009152c;
DesableGUN = 0x8009154c;
_InitGun = 0x80091570;
_ExitGun = 0x800915dc;
_check_gun_flag = 0x80091644;
_clear_gun_flag = 0x80091654;
read_gun_v = 0x80091684;
read_gun_h = 0x80091690;
__adddf3 = 0x80091860;
_add_mant_d = 0x80091be0;
__addsf3 = 0x80091c90;
atan = 0x80091e38;
atan2 = 0x80092044;
asin = 0x800922dc;
acos = 0x80092460;
_dbl_shift = 0x80092658;
_dbl_shift_us = 0x80092720;
__divdf3 = 0x800927e8;
_comp_mant = 0x80092acc;
__divsf3 = 0x80092b10;
__eqdf2 = 0x80092c60;
__eqsf2 = 0x80092cb0;
exp = 0x80092ce0;
__extendsfdf2 = 0x80092f08;
_err_math = 0x80093068;
__fixdfsi = 0x800930d0;
__fixsfsi = 0x800931d0;
floor = 0x80093288;
ceil = 0x80093360;
__floatsidf = 0x80093540;
__floatsisf = 0x80093648;
__gedf2 = 0x80093700;
__gesf2 = 0x800937e0;
__gtdf2 = 0x80093888;
__gtsf2 = 0x80093968;
hypot = 0x80093a00;
ldexp = 0x80093c20;
frexp = 0x80093ce4;
__ledf2 = 0x80093e10;
__lesf2 = 0x80093ee8;
log = 0x80093f90;
log10 = 0x800941d8;
__ltdf2 = 0x80094270;
__ltsf2 = 0x80094350;
_mainasu = 0x800943f0;
modf = 0x80094468;
fmod = 0x80094510;
__muldf3 = 0x80094658;
_mul_mant_d = 0x8009496c;
__mulsf3 = 0x80094a60;
__nedf2 = 0x80094ba8;
__negdf2 = 0x80094bf8;
__negsf2 = 0x80094c30;
__nesf2 = 0x80094c50;
pow = 0x80094c80;
printf2 = 0x80094eb0;
sprintf2 = 0x80094ef0;
prnt = 0x80094f24; // allow_duplicated:True
cvt = 0x80095910;
round = 0x800961a0;
exponent = 0x80096344;
sinh = 0x80096420;
cosh = 0x80096558;
tanh = 0x800965c8;
_tan = 0x80096718;
tan = 0x80096910;
sin = 0x80096998;
cos = 0x80096a70;
sqrt = 0x80096ba8;
atof = 0x80096cd8;
strtod = 0x80096cf8;
space_sign = 0x800971c8;
__subdf3 = 0x80097220;
__subsf3 = 0x800972a8;
__truncdfsf2 = 0x80097308;
MemCardInit = 0x80097440;
MemCardEnd = 0x80097470;
MemCardStart = 0x80097490;
MemCardStop = 0x800974f0;
MemCardExist = 0x80097530;
_card_exist_back = 0x800975ac;
MemCardAccept = 0x8009778c;
_card_accept_back = 0x80097808;
MemCardOpen = 0x80097a14;
MemCardClose = 0x80097b94;
MemCardReadData = 0x80097bdc;
_card_read_data = 0x80097c9c;
MemCardWriteData = 0x80097dec;
_card_write_data = 0x80097eac;
MemCardReadFile = 0x80097ffc;
_card_read_file = 0x80098108;
MemCardWriteFile = 0x800982b8;
_card_write_file = 0x800983c4;
MemCardGetDirentry = 0x80098574;
MemCardCallback = 0x800987e8;
MemCardSync = 0x800987fc;
MemCardCreateFile = 0x800988ec;
MemCardDeleteFile = 0x80098b1c;
MemCardFormat = 0x80098cfc;
MemCardUnformat = 0x80098d94;
_rslt_to_code = 0x80098e50;
_callback_handler = 0x80098ea8;
_make_file_discrpt = 0x80098f48;
funcEvSpIOE = 0x80098fa4;
funcEvSpError = 0x80098fb8;
funcEvSpTimeout = 0x80098fcc;
funcEvSpNewcard = 0x80098fe0;
funcEvSpIOEx = 0x80098ff4;
funcEvSpErrorx = 0x80099008;
funcEvSpTimeoutx = 0x8009901c;
funcEvSpNewcardx = 0x80099030;
_card_open = 0x80099044;
_card_start = 0x80099074;
_card_close = 0x80099258;
_card_stop = 0x80099278;
_clr_card_event = 0x80099330;
_get_card_event = 0x80099438;
_get_card_event_x = 0x80099514;
_chk_card_event = 0x800995f0;
_chk_card_event_x = 0x8009962c;
UserFuncInit = 0x80099668;
UserFuncOpen = 0x8009967c;
UserFuncExecute = 0x800996fc;
UserFuncComplete = 0x80099768;
DecDCTvlcBuild = 0x80099778;
_EncSPU_encode = 0x80099860;
_EncSPU = 0x800999e4;
EncSPU = 0x80099c7c;
DecDCTReset = 0x80099ce0;
DecDCTGetEnv = 0x80099d18;
DecDCTPutEnv = 0x80099da4;
DecDCTBufSize = 0x80099e40;
DecDCTin = 0x80099e4c;
DecDCTout = 0x80099ec8;
DecDCTinSync = 0x80099ee8;
DecDCToutSync = 0x80099f24;
DecDCTinCallback = 0x80099f60;
DecDCToutCallback = 0x80099f84;
MDEC_reset = 0x80099fa8;
MDEC_in = 0x8009a0a4;
MDEC_out = 0x8009a138;
MDEC_in_sync = 0x8009a1c8;
MDEC_out_sync = 0x8009a260;
MDEC_status = 0x8009a2f8;
timeout = 0x8009a310;
DecDCTvlcSize2 = 0x8009a444;
DecDCTvlc2 = 0x8009a474;
DecDCTvlcSize = 0x8009a7dc;
DecDCTvlc = 0x8009a80c;
_cdevinput = 0x8009ab70;
_cdevscan = 0x8009ab7c;
_circgetc = 0x8009ab88;
_ioabort = 0x8009ab94;
add_nullcon_driver = 0x8009aba0;
Sio1Callback = 0x8009abb0;
siocons = 0x8009b170;
DelSIO = 0x8009b194;
AddSIO = 0x8009b210;
_sio_control = 0x8009b520;
_SsContBankChange = 0x8009b780;
_SsContRpn1 = 0x8009b7f8;
_SsContRpn2 = 0x8009b868;
_SsContPanpot = 0x8009b8d8;
_SsContExpression = 0x8009b9a0;
_SsContResetAll = 0x8009ba88;
_SsContDamper = 0x8009bb48;
_SsContDataEntry = 0x8009bbf0;
_SsContMainVol = 0x8009c018;
_SsContExternal = 0x8009c0e8;
_SsContNrpn1 = 0x8009c170;
_SsContNrpn2 = 0x8009c2a0;
_SsUtResolveADSR = 0x8009c3d8;
_SsUtBuildADSR = 0x8009c434;
_SsSndCrescendo = 0x8009c4d8;
_SsSetNrpnVabAttr0 = 0x8009c7d8;
_SsSetNrpnVabAttr10 = 0x8009c868;
_SsSetNrpnVabAttr11 = 0x8009c920;
_SsSetNrpnVabAttr12 = 0x8009c9c8;
_SsSetNrpnVabAttr13 = 0x8009caa8;
_SsSetNrpnVabAttr14 = 0x8009cb48;
_SsSetNrpnVabAttr15 = 0x8009cbe8;
_SsSetNrpnVabAttr16 = 0x8009cc10;
_SsSetNrpnVabAttr17 = 0x8009cc38;
_SsSetNrpnVabAttr18 = 0x8009cc60;
_SsSetNrpnVabAttr19 = 0x8009cc88;
_SsSetNrpnVabAttr1 = 0x8009ccb0;
_SsSetNrpnVabAttr2 = 0x8009cd70;
_SsSetNrpnVabAttr3 = 0x8009ce00;
_SsSetNrpnVabAttr4 = 0x8009ce90;
_SsSetNrpnVabAttr5 = 0x8009cf48;
_SsSetNrpnVabAttr6 = 0x8009d000;
_SsSetNrpnVabAttr7 = 0x8009d0b0;
_SsSetNrpnVabAttr8 = 0x8009d160;
_SsSetNrpnVabAttr9 = 0x8009d218;
_SsSndDecrescendo = 0x8009d2d0;
dmy_nothing1 = 0x8009d590;
dmy_SsNoteOn = 0x8009d598;
dmy_SsSetProgramChange = 0x8009d5d8;
dmy_SsGetMetaEvent = 0x8009d618;
dmy_SsSetPitchBend = 0x8009d658;
dmy_SsSetControlChange = 0x8009d698;
dmy_SsContBankChange = 0x8009d6d8;
dmy_SsContDataEntry = 0x8009d718;
dmy_SsContMainVol = 0x8009d758;
dmy_SsContPanpot = 0x8009d798;
dmy_SsContExpression = 0x8009d7d8;
dmy_SsContDamper = 0x8009d818;
dmy_SsContExternal = 0x8009d858;
dmy_SsContNrpn1 = 0x8009d898;
dmy_SsContNrpn2 = 0x8009d8d8;
dmy_SsContRpn1 = 0x8009d918;
dmy_SsContRpn2 = 0x8009d958;
dmy_SsContResetAll = 0x8009d998;
dmy_SsSetNrpnVabAttr0 = 0x8009d9d8;
dmy_SsSetNrpnVabAttr1 = 0x8009da1c;
dmy_SsSetNrpnVabAttr2 = 0x8009da60;
dmy_SsSetNrpnVabAttr3 = 0x8009daa4;
dmy_SsSetNrpnVabAttr4 = 0x8009dae8;
dmy_SsSetNrpnVabAttr5 = 0x8009db2c;
dmy_SsSetNrpnVabAttr6 = 0x8009db70;
dmy_SsSetNrpnVabAttr7 = 0x8009dbb4;
dmy_SsSetNrpnVabAttr8 = 0x8009dbf8;
dmy_SsSetNrpnVabAttr9 = 0x8009dc3c;
dmy_SsSetNrpnVabAttr10 = 0x8009dc80;
dmy_SsSetNrpnVabAttr11 = 0x8009dcc4;
dmy_SsSetNrpnVabAttr12 = 0x8009dd08;
dmy_SsSetNrpnVabAttr13 = 0x8009dd4c;
dmy_SsSetNrpnVabAttr14 = 0x8009dd90;
dmy_SsSetNrpnVabAttr15 = 0x8009ddd4;
dmy_SsSetNrpnVabAttr16 = 0x8009de18;
dmy_SsSetNrpnVabAttr17 = 0x8009de5c;
dmy_SsSetNrpnVabAttr18 = 0x8009dea0;
dmy_SsSetNrpnVabAttr19 = 0x8009dee4;
_SsSetPitchBend = 0x8009df28;
_SsSetControlChange = 0x8009dfd8;
_SsGetMetaEvent = 0x8009e210;
_SsNoteOn = 0x8009e3e0;
_SsSetProgramChange = 0x8009e4c0;
_SsSeqPlay = 0x8009e530;
_SsSeqGetEof = 0x8009e638;
_SsGetSeqData = 0x8009e87c;
_SsReadDeltaValue = 0x8009ec28;
_SsSndNextSep = 0x8009ecd8;
_SsSndNextPause = 0x8009edd8;
_SsSndPause = 0x8009ee38;
Snd_SetPlayMode = 0x8009eed8;
_SsSndPlay = 0x8009eff8;
_SsSndReplay = 0x8009f028;
_SsInitSoundSep = 0x8009f088;
_SsInitSoundSeq = 0x8009f470;
_SsSndSetAccele = 0x8009f7c0;
SsSeqSetAccelerando = 0x8009f9a0;
SsSepSetAccelerando = 0x8009f9d4;
SsSeqCalledTbyT = 0x8009fa00;
_SsClose = 0x8009fc78;
SsSeqClose = 0x8009fdf4;
SsSepClose = 0x8009fe18;
SsChannelMute = 0x8009fe40;
SsGetChannelMute = 0x8009fe7c;
_SsSndSetCres = 0x8009fec0;
SsSeqSetCrescendo = 0x8009ff64;
SsSepSetCrescendo = 0x8009ffe4;
_SsSndSetDecres = 0x800a0088;
SsSeqSetDecrescendo = 0x800a012c;
SsSepSetDecrescendo = 0x800a01ac;
SsEnd = 0x800a0250;
SsGetCurrentPoint = 0x800a0318;
SsGetMute = 0x800a0358;
SsGetMVol = 0x800a0378;
SsGetNck = 0x800a03f8;
SsGetRVol = 0x800a0420;
SsGetSerialAttr = 0x800a04a8;
SsGetSerialVol = 0x800a0550;
SsInit = 0x800a0628;
SsInitHot = 0x800a0658;
_SsInit = 0x800a0688;
SsSetLoop = 0x800a0770;
SsIsEos = 0x800a07b0;
SsSetMarkCallback = 0x800a07f0;
SsSetNext = 0x800a0818;
SsSeqSetNext = 0x800a08b4;
SsSetNoiseOff = 0x800a0910;
SsSetNoiseOn = 0x800a0930;
SsSepOpenJ = 0x800a0958;
SsSepOpen = 0x800a0a88;
SsSeqOpenJ = 0x800a0e08;
SsSeqOpen = 0x800a0ed8;
_SsSndSetPauseMode = 0x800a11f8;
SsSeqPause = 0x800a12c8;
SsSepPause = 0x800a12f0;
SsPlayBack = 0x800a1320;
SsSeqPlay = 0x800a13e0;
SsSepPlay = 0x800a1418;
SsQuit = 0x800a1450;
_SsSndSetReplayMode = 0x800a1470;
SsSeqReplay = 0x800a150c;
SsSepReplay = 0x800a1534;
_SsSndSetRit = 0x800a1560;
SsSeqSetRitardando = 0x800a173c;
SsSepSetRitardando = 0x800a1770;
SsSetSerialAttr = 0x800a17a0;
SsSetMute = 0x800a1838;
SsSetMVol = 0x800a1878;
SsSetNck = 0x800a18c8;
SsSetRVol = 0x800a18f0;
_SsStart = 0x800a1978;
SsStart = 0x800a1be0;
SsStart2 = 0x800a1c00;
_SsTrapIntrVSync = 0x800a1c20;
_SsSeqCalledTbyT_1per2 = 0x800a1c60;
_SsSndStop = 0x800a1cb0;
SsSeqStop = 0x800a1e3c;
SsSepStop = 0x800a1e64;
SsSetSerialVol = 0x800a1e90;
SsSetTableSize = 0x800a1f90;
SsSetTempo = 0x800a2168;
SsSetTickCallback = 0x800a22a8;
SsSetTickMode = 0x800a22d0;
SsVoKeyOff = 0x800a2440;
SsVoKeyOn = 0x800a2480;
_SsSndSetVol = 0x800a24d0;
SsSeqSetVol = 0x800a2508;
SsSepSetVol = 0x800a2538;
SsSeqGetVol = 0x800a2570;
_SsSndTempo = 0x800a25a8;
SsUtAllKeyOff = 0x800a27c8;
SsUtAutoPan = 0x800a28e0;
SsUtAutoVol = 0x800a2948;
SsUtChangeADSR = 0x800a29b0;
SsUtChangePitch = 0x800a2a88;
SsUtFlush = 0x800a2bc8;
SsUtGetProgAtr = 0x800a2c08;
SsUtGetVagAddr = 0x800a2d10;
SsUtGetVagAddrFromTone = 0x800a2dc8;
SsUtGetVagAtr = 0x800a2eb0;
SsUtGetVBaddrInSB = 0x800a30f0;
SsUtGetVabHdr = 0x800a3140;
SsUtKeyOn = 0x800a3220;
SsUtKeyOff = 0x800a35bc;
SsUtKeyOnV = 0x800a3710;
SsUtKeyOffV = 0x800a3aa4;
SsUtPitchBend = 0x800a3b20;
SsUtSetReverbDelay = 0x800a3bb0;
SsUtSetReverbDepth = 0x800a3bf0;
SsUtSetReverbType = 0x800a3c88;
SsUtGetReverbType = 0x800a3d2c;
SsUtSetReverbFeedback = 0x800a3d40;
SsUtReverbOff = 0x800a3d80;
SsUtReverbOn = 0x800a3da0;
SsUtSetProgAtr = 0x800a3dc0;
SsUtSetVagAtr = 0x800a3e90;
SsUtSetVabHdr = 0x800a4058;
SsUtGetDetVVol = 0x800a40e0;
SsUtSetDetVVol = 0x800a4138;
SsUtGetVVol = 0x800a41a4;
SsUtSetVVol = 0x800a4230;
_SsVmAlloc = 0x800a4318;
_SsVmDoAllocate = 0x800a45a8;
SeAutoPan = 0x800a47c0;
SetAutoPan = 0x800a4a34;
SeAutoVol = 0x800a4d78;
SetAutoVol = 0x800a4fec;
_SsVmDamperOff = 0x800a5338;
_SsVmDamperOn = 0x800a5348;
_SsVmFlush = 0x800a5360;
_SsVmInit = 0x800a5718;
_SsVmKeyOn = 0x800a5a28;
_SsVmKeyOff = 0x800a5f70;
_SsVmSeKeyOn = 0x800a60bc;
_SsVmSeKeyOff = 0x800a61a8;
KeyOnCheck = 0x800a61dc;
note2pitch = 0x800a61e8;
note2pitch2 = 0x800a62ac;
vmNoiseOn = 0x800a63a8;
vmNoiseOn2 = 0x800a6870;
vmNoiseOff = 0x800a6a10;
_SsVmNoiseOnWithAdsr = 0x800a6a58;
_SsVmNoiseOff = 0x800a6ae8;
_SsVmNoiseOn = 0x800a6b84;
_SsVmKeyOffNow = 0x800a6c00;
_SsVmKeyOnNow = 0x800a6cd0;
_SsVmPBVoice = 0x800a7180;
_SsVmPitchBend = 0x800a7380;
_SsVmSetProgVol = 0x800a7470;
_SsVmGetProgVol = 0x800a74e4;
_SsVmSetProgPan = 0x800a7538;
_SsVmGetProgPan = 0x800a75ac;
_SsVmSetSeqVol = 0x800a7600;
_SsVmGetSeqVol = 0x800a7b38;
_SsVmGetSeqLVol = 0x800a7b9c;
_SsVmGetSeqRVol = 0x800a7be4;
_SsVmSeqKeyOff = 0x800a7c2c;
SePitchBend = 0x800a7cc8;
_SsVmSelectToneAndVag = 0x800a7e60;
SsUtVibrateOn = 0x800a7f18;
SsUtVibrateOff = 0x800a7f20;
_SsVmSetVol = 0x800a7f28;
_SsVmVSetUp = 0x800a84a8;
_SsSndSetVolData = 0x800a8570;
SsSetAutoKeyOffMode = 0x800a8668;
SsSetMono = 0x800a8678;
SsSetStereo = 0x800a868c;
SsSetReservedVoice = 0x800a86a0;
SsVabClose = 0x800a86d0;
SsVabFakeBody = 0x800a8758;
SsVabOpenHead = 0x800a87c8;
SsVabOpenHeadSticky = 0x800a87f8;
SsVabFakeHead = 0x800a8828;
SsVabOpenHeadWithMode = 0x800a8858;
SsVabTransBody = 0x800a8c38;
SsVabTransBodyPartly = 0x800a8cf8;
SsVabTransCompleted = 0x800a8e58;
SsVabTransfer = 0x800a8e80;
_SpuCallback = 0x800a8f00;
SpuClearReverbWorkArea = 0x800a8f28;
_SpuDataCallback = 0x800a90c8;
SpuFlush = 0x800a90f0;
_SpuGetAnyVoice = 0x800a9310;
SpuGetCommonAttr = 0x800a9340;
SpuGetCommonCDMix = 0x800a9648;
SpuGetCommonCDReverb = 0x800a9678;
SpuGetCommonCDVolume = 0x800a96a8;
SpuGetCommonMasterVolumeAttr = 0x800a96d8;
SpuGetCommonMasterVolume = 0x800a98e0;
SpuGetCommonMasterVolumeX = 0x800a9958;
SpuGetIRQAddr = 0x800a9988;
SpuGetIRQ = 0x800a99b0;
SpuGetKeyStatus = 0x800a99d0;
SpuGetMute = 0x800a9a68;
SpuGetNoiseClock = 0x800a9a88;
SpuGetNoiseVoice = 0x800a9aa8;
SpuGetPitchLFOVoice = 0x800a9ad0;
SpuGetReverbModeDepth = 0x800a9af8;
SpuGetReverbModeDelayTime = 0x800a9b18;
SpuGetReverbModeFeedback = 0x800a9b28;
SpuGetReverbModeParam = 0x800a9b38;
SpuGetReverbModeType = 0x800a9b88;
SpuGetReverb = 0x800a9b98;
SpuGetReverbVoice = 0x800a9bb8;
SpuGetTransferMode = 0x800a9be0;
SpuGetTransferStartAddr = 0x800a9c28;
SpuGetVoiceADSRAttr = 0x800a9c40;
SpuGetVoiceADSR = 0x800a9d10;
SpuGetVoiceAttr = 0x800a9d68;
SpuGetVoiceARAttr = 0x800a9dd0;
SpuGetVoiceAR = 0x800a9e18;
SpuGetVoiceDR = 0x800a9e40;
SpuGetVoiceEnvelopeAttr = 0x800a9e68;
SpuGetVoiceEnvelope = 0x800a9ed8;
SpuGetVoiceLoopStartAddr = 0x800a9ef8;
SpuGetVoiceNote = 0x800a9f28;
SpuGetVoicePitch = 0x800a9f90;
SpuGetVoiceRRAttr = 0x800a9fb0;
SpuGetVoiceRR = 0x800a9ff8;
SpuGetVoiceStartAddr = 0x800aa020;
SpuGetVoiceSL = 0x800aa050;
SpuGetVoiceSampleNote = 0x800aa078;
SpuGetVoiceSRAttr = 0x800aa090;
SpuGetVoiceSR = 0x800aa100;
SpuGetVoiceVolumeAttr = 0x800aa130;
SpuGetVoiceVolume = 0x800aa340;
SpuGetVoiceVolumeX = 0x800aa3a0;
SpuInitHot = 0x800aa3d8;
_SpuInit = 0x800aa3f8;
SpuStart = 0x800aa4f0;
SpuInit = 0x800aa570;
SpuIsReverbWorkAreaReserved = 0x800aa590;
SpuIsTransferCompleted = 0x800aa5d8;
_spu_setInTransfer = 0x800aa680;
_spu_getInTransfer = 0x800aa6ac;
SpuFree = 0x800aa6c8;
SpuInitMalloc = 0x800aa748;
_spu_gcSPU = 0x800aa7a0;
SpuMalloc = 0x800aaaa8;
_SpuIsInAllocateArea = 0x800aad70;
_SpuIsInAllocateArea_ = 0x800aadf0;
_SpuMallocSeparateTo3 = 0x800aae80;
SpuMallocWithStartAddr = 0x800ab1dc;
_spu_print = 0x800ab498;
_spu_2pitch = 0x800ab548;
_spu_note2pitch = 0x800ab5d8;
_spu_pitch2note = 0x800ab714;
SpuNGetVoiceAttr = 0x800ab840;
SpuNSetVoiceAttr = 0x800abbe8;
_spu_init = 0x800abc18;
_spu_FwriteByIO = 0x800abeac;
_spu_FiDMA = 0x800ac078;
_spu_Fr_ = 0x800ac138;
_spu_t = 0x800ac1e4;
_spu_Fw = 0x800ac474;
_spu_Fr = 0x800ac4fc;
_spu_FsetRXX = 0x800ac564;
_spu_FsetRXXa = 0x800ac5ac;
_spu_FgetRXXa = 0x800ac650;
_spu_FsetPCR = 0x800ac68c;
_spu_FsetDelayW = 0x800ac6ec;
_spu_FsetDelayR = 0x800ac718;
_spu_Fw1ts = 0x800ac744;
SpuQuit = 0x800ac7b0;
SpuReadDecodedData = 0x800ac830;
SpuRGetAllKeysStatus = 0x800ac8a0;
SpuGetAllKeysStatus = 0x800ac970;
SpuRead = 0x800ac9f8;
SpuReserveReverbWorkArea = 0x800aca58;
SpuRSetVoiceAttr = 0x800acaa8;
_SpuRSetVoiceAttr = 0x800acae0;
_SpuSetAnyVoice = 0x800ad120;
SpuSetCommonAttr = 0x800ad328;
SpuSetCommonCDMix = 0x800ad6c0;
SpuSetCommonCDReverb = 0x800ad708;
SpuSetCommonCDVolume = 0x800ad750;
SpuSetCommonMasterVolumeAttr = 0x800ad770;
SpuSetCommonMasterVolume = 0x800ad8d0;
SpuSetEnv = 0x800ad8f0;
SpuSetIRQAddr = 0x800ad958;
SpuSetIRQCallback = 0x800ad998;
SpuSetIRQ = 0x800ad9e0;
SpuSetKey = 0x800adb20;
SpuSetKeyOnWithAttr = 0x800add20;
SpuSetMute = 0x800add58;
SpuSetNoiseClock = 0x800addb0;
SpuSetNoiseVoice = 0x800ade00;
SpuSetPitchLFOVoice = 0x800ade28;
_spu_setReverbAttr = 0x800ade50;
SpuSetReverbDepth = 0x800ae320;
SpuSetReverbModeDepth = 0x800ae398;
SpuSetReverbModeDelayTime = 0x800ae3c8;
SpuSetReverbModeFeedback = 0x800ae4e0;
SpuSetReverbModeParam = 0x800ae5a0;
SpuSetReverbModeType = 0x800aea98;
SpuSetReverb = 0x800aec78;
SpuSetReverbVoice = 0x800aed48;
SpuSetTransferCallback = 0x800aed70;
SpuSetTransferMode = 0x800aed98;
SpuSetTransferStartAddr = 0x800aedd0;
SpuSetVoiceADSRAttr = 0x800aee28;
SpuSetVoiceADSR = 0x800aef28;
SpuSetVoiceAttr = 0x800aef98;
SpuSetVoiceARAttr = 0x800aefc0;
SpuSetVoiceAR = 0x800af018;
SpuSetVoiceDR = 0x800af060;
SpuSetVoiceLoopStartAddr = 0x800af0a8;
SpuSetVoiceNote = 0x800af0d8;
SpuSetVoicePitch = 0x800af148;
SpuSetVoiceRRAttr = 0x800af180;
SpuSetVoiceRR = 0x800af1e0;
SpuSetVoiceStartAddr = 0x800af228;
SpuSetVoiceSL = 0x800af258;
SpuSetVoiceSampleNote = 0x800af2a0;
SpuSetVoiceSRAttr = 0x800af2d0;
SpuSetVoiceSR = 0x800af370;
SpuSetVoiceVolumeAttr = 0x800af3b8;
SpuSetVoiceVolume = 0x800af4e8;
_SpuStCBPrepare = 0x800af528;
_SpuStStartPrepare = 0x800af694;
_SpuStSetTransferEnv = 0x800af858;
_SpuStCB_IRQ = 0x800afa7c;
_SpuStCB_Transfer = 0x800afef8;
_SpuStStart = 0x800b018c;
SpuStTransfer = 0x800b0340;
SpuStInit = 0x800b03c8;
SpuStQuit = 0x800b04e0;
SpuStGetStatus = 0x800b0604;
SpuStGetVoiceStatus = 0x800b0678;
SpuStSetPreparationFinishedCallback = 0x800b0688;
SpuStSetTransferFinishedCallback = 0x800b06ac;
SpuStSetStreamFinishedCallback = 0x800b06d0;
_SpuStCB_IRQfinal = 0x800b06f4;
SpuWrite0 = 0x800b07b8;
SpuWrite = 0x800b0918;
SpuWritePartly = 0x800b0978;
TimerCallback = 0x800b0a08;
_tc_cb_trapHSync = 0x800b0b9c;
_tc_cb_trapVSync = 0x800b0be4;
_tc_cb_trapSystemClock = 0x800b0c2c;
InitTAP = 0x800b1e58;
StartTAP = 0x800b1e78;
StopTAP = 0x800b1e98;
SendTAP = 0x800b1eb8;
EnableTAP = 0x800b1ed8;
DisableTAP = 0x800b1ef8;
D_800B2008 = 0x800B2008; // type:asciz 
D_800B2220 = 0x800B2220; // type:asciz 
D_800B2228 = 0x800B2228; // type:asciz 
D_800B223C = 0x800B223C; // type:asciz 
D_800B2810 = 0x800B2810; // type:asciz
D_800B2814 = 0x800B2814; // type:asciz
D_800B28C4 = 0x800B28C4; // type:asciz force_not_migration:True
D_800B2AC0 = 0x800B2AC0; // type:asciz
D_800B2AC4 = 0x800B2AC4; // type:asciz
D_800B2FB8 = 0x800B2FB8; // type:asciz force_not_migration:True
D_800B3000 = 0x800B3000; // type:asciz
D_800B3004 = 0x800B3004; // type:asciz
D_800B3020 = 0x800B3020; // type:asciz
D_800B42E0 = 0x800B42E0; // type:asciz
D_800B4310 = 0x800B4310; // type:asciz
D_800B4314 = 0x800B4314; // type:asciz
D_800B3878 = 0x800B3878; // type:asciz
D_800B38AC = 0x800B38AC; // type:asciz
D_800B3A30 = 0x800B3A30; // type:asciz
D_800B3A60 = 0x800B3A60; // type:asciz
D_800B4924 = 0x800B4924; // type:asciz
D_800B4930 = 0x800B4930; // type:asciz
D_800B4934 = 0x800B4934; // type:asciz
_freep = 0x800b5018;
_ctype_ = 0x800b5038;
CD_cbsync = 0x800b50f0;
CD_cbready = 0x800b50f4;
CD_cbread = 0x800b50f8;
CD_debug = 0x800b50fc;
CD_status = 0x800b5100;
CD_status1 = 0x800b5104;
CD_nopen = 0x800b5108;
CD_pos = 0x800b510c;
CD_mode = 0x800b5110;
CD_com = 0x800b5111;
DS_active = 0x800b5114;
CD_comstr = 0x800b5118;
CD_intstr = 0x800b5198;
debug_cause = 0x800b54d8;
DS_comstr = 0x800b5d08;
DS_intstr = 0x800b5ec8;
Vcount = 0x800b70b8;
Hcount = 0x800b70d8;
Font = 0x800b7130; // size:0x30
n_fonts_open = 0x800B72B0;
dump_id = 0x800B72B4;
kanjiclut = 0x800b86cc;
GPU_printf = 0x800b8924;
D_800B8928 = 0x800b8928; // size:0x80
D_800B89D0 = 0x800B89D0;
_qlog = 0x800b8a1c;
_qin = 0x800b8a2c;
_qout = 0x800b8a30;
GsADIVZ = 0x800b8a58;
GsADIVW = 0x800b8a5c;
GsADIVH = 0x800b8a5e;
CLIPEvbf = 0x800b8e88;
H_cor_tbl = 0x800b8e90;
H_ln_tbl = 0x800b8ea8;
K_cor_tbl = 0x800b8ec8;
rcossin_tbl = 0x800b8ef8;
ratan_tbl = 0x800bd5b8;
rsin_tbl = 0x800bdf00;
SQRT = 0x800be708;
math_errno = 0x800be900;
math_err_point = 0x800be904;
DCL_DVLC = 0x800bf890;
DCC_DVLC = 0x800bfc90;
CF_DVLC = 0x800c0090;
CF2_DVLC = 0x800d0090;
_snd_seq_tick_env = 0x800d09d0;
_svm_sreg = 0x800d09e8;
_spu_EVdma = 0x800d0b88;
_spu_keystat = 0x800d0b8c;
_spu_trans_mode = 0x800d0b90;
_spu_rev_flag = 0x800d0b94;
_spu_rev_reserve_wa = 0x800d0b98;
_spu_rev_offsetaddr = 0x800d0b9c;
_spu_rev_attr = 0x800d0ba0;
_spu_RQvoice = 0x800d0bb4;
_spu_RQmask = 0x800d0bb8;
_spu_voice_centerNote = 0x800d0bbc;
_spu_zerobuf = 0x800d0bec;
_spu_env = 0x800d0fec;
_spu_isCalled = 0x800d0ff0;
_spu_AllocBlockNum = 0x800d0ff8;
_spu_AllocLastNum = 0x800d0ffc;
_spu_memList = 0x800d1000;
_spu_RXX = 0x800d1008;
_spu_tsa = 0x800d1020;
_spu_transMode = 0x800d1024;
_spu_addrMode = 0x800d1028;
_spu_mem_mode = 0x800d102c;
_spu_mem_mode_plus = 0x800d1030;
_spu_mem_mode_unit = 0x800d1034;
_spu_mem_mode_unitM = 0x800d1038;
_spu_inTransfer = 0x800d103c;
_spu_transferCallback = 0x800d1040;
_spu_IRQCallback = 0x800d1044;
_spu_rev_startaddr = 0x800d1068;
_spu_rev_workareasize = 0x800d1090;
_spu_rev_param = 0x800d10b8;
_sio_driver = 0x800d1214;
siobuf = 0x800d1770;
mode = 0x800d1880;
baud = 0x800d1884;
cntl = 0x800d1888;
_r_bp = 0x800d1910;
_r_p = 0x800d1920;
_r_freep = 0x800d192c;
_AllocRestBlockTop = 0x800d1930;
_max_heap = 0x800d1934;
_TopAllocArea = 0x800d1938;
_Candidate = 0x800d193c;
patch0 = 0x800d1940;
buf__dot__2 = 0x800d1950;
column = 0x800d1960;
n = 0x800d1968;
sdb = 0x800d1970;
rsec = 0x800d1b50;
bu_buf = 0x800d1ba0;
Result__one = 0x800d1c20;
Alarm = 0x800d1c38;
StMode = 0x800d1c44;
StFunc1 = 0x800d1c48;
StFunc2 = 0x800d1c4c;
previous_frame_location = 0x800d1c58;
next_frameid = 0x800d1c5c;
HeaderArea__dot__2 = 0x800d1c98;
loc = 0x800d1cc8;
ntoc = 0x800d1e58;
fp__dot1__2 = 0x800d1e60;
exec__dot1__5 = 0x800d1e78;
StRingAddr = 0x800d1eb8;
StRingBase = 0x800d1ebc;
StRgb24 = 0x800d1ec0;
StEmu_Addr = 0x800d1ec4;
StEmu_Idx = 0x800d1ec8;
StRingSize = 0x800d1ecc;
StRingIdx1 = 0x800d1ed0;
StRingIdx2 = 0x800d1ed4;
StRingIdx3 = 0x800d1ed8;
StSTART_FLAG = 0x800d1edc;
StStartFrame = 0x800d1ee0;
StEndFrame = 0x800d1ee4;
StFinalSector = 0x800d1ee8;
Stframe_no = 0x800d1eec;
Stsector_offset = 0x800d1ef0;
StCdIntrFlag = 0x800d1ef4;
StCHANNEL = 0x800d1ef8;
CChannel = 0x800d1efc;
file__dups1 = 0x800d1f08;
dire__dups1 = 0x800d2508;
load_buf__dups1 = 0x800d3b08;
regs__dups1 = 0x800d4308;
CombWaitCallback = 0x800d4318;
sen = 0x800d431c;
rec = 0x800d432c;
GlobalCallback = 0x800d4340;
file__dups2 = 0x800d4348;
dire__dups2 = 0x800d4948;
load_buf__dups2 = 0x800d5f48;
fp__dot2__2 = 0x800d6748;
exec__dot2__5 = 0x800d6760;
vsync_callback = 0x800d67a0;
sync_callback = 0x800d67a4;
ready_callback = 0x800d67a8;
tmp__dot__34 = 0x800d67b0;
IntrCd = 0x800d67c0;
Queue = 0x800d67f0;
Result__two = 0x800d68bc;
GD_disk_kind = 0x800d6940;
pad_buf = 0x800d6948;
PadIdentifier = 0x800d694c;
_CntDrEnv = 0x800d6950;
str = 0x800D6960;
sprt = 0x800D6D60;
str__dot__6 = 0x800dad68;
poly__dot__7 = 0x800db568;
tpage__dups = 0x800e5568;
clut__dups = 0x800e556c;
k_tmp = 0x800e5570;
KanjiFont = 0x800e7570;
txyuv = 0x800e7640;
p0__dot__87 = 0x800e8640;
p1__dot__88 = 0x800e8664;
ctlbuf = 0x800e8684;
_que = 0x800e8784;
tim = 0x800e9f88;
v_ofs = 0x800e9f8c;
n_ofs = 0x800e9f90;
t_prim = 0x800e9f94;
n_prim = 0x800e9f98;
num_types__dot__2 = 0x800e9fa0;
top_types__dot__3 = 0x800e9fa4;
typep__dot__4 = 0x800e9fa8;
GsLIGNR = 0x800e9fb0;
GsLIOFF = 0x800e9fb4;
GsZOVER = 0x800e9fb8;
GsBACKC = 0x800e9fbc;
GsNDIV = 0x800e9fc0;
GsTRATE = 0x800e9fc4;
GsTON = 0x800e9fc8;
GsDISPON = 0x800e9fcc;
GsOUT_PACKET_P = 0x800e9fd0;
GsMATE_C = 0x800e9fd4;
GsLMODE = 0x800e9fd8;
Clear = 0x800e9fe0;
CLIP2 = 0x800ea000;
PSDBASEX = 0x800ea008;
PSDBASEY = 0x800ea00c;
PSDIDX = 0x800ea010;
PSDCNT = 0x800ea014;
POSITION = 0x800ea018;
GsDRAWENV = 0x800ea020;
GsDISPENV = 0x800ea080;
PSDOFSX = 0x800ea094;
PSDOFSY = 0x800ea098;
GsORGOFSX = 0x800ea09c;
GsORGOFSY = 0x800ea09e;
PSDGPU = 0x800ea0a0;
HWD0 = 0x800ea0a8;
VWD0 = 0x800ea0ac;
GsLIGHT_MODE = 0x800ea0b0;
GsCLIP3far = 0x800ea0b4;
GsCLIP3near = 0x800ea0b8;
GsLIGHTWSMATRIX = 0x800ea0c0;
_LC = 0x800ea0e0;
GsWSMATRIX = 0x800ea100;
GsWSMATRIX_ORG = 0x800ea120;
GsIDMATRIX = 0x800ea140;
GsIDMATRIX2 = 0x800ea160;
USTACK = 0x800ea180;
DSTACK = 0x800ea200;
GsFCALL4 = 0x800ea280;
GsFCALL5 = 0x800ea3b0;
CLIPKdhy = 0x800ea4e0;
CLIPNearz = 0x800ea4e4;
CLIPFarz = 0x800ea4e8;
_tmp_evbf = 0x800ea4f0;
CLIPHdkx = 0x800ea7b0;
CLIPHdky = 0x800ea7b4;
CLIPKdhx = 0x800ea7b8;
pixdata = 0x800ea7c0;
cnt__dot__16 = 0x8010ffc0;
rslt__dot__17 = 0x8010ffc4;
cnt__dot__22 = 0x8010ffc8;
rslt__dot__23 = 0x8010ffcc;
newcard__dot__24 = 0x8010ffd0;
ev0 = 0x8010ffd4;
ev1 = 0x8010ffd8;
ev2 = 0x8010ffdc;
ev3 = 0x8010ffe0;
ev10 = 0x8010ffe4;
ev11 = 0x8010ffe8;
ev12 = 0x8010ffec;
ev13 = 0x8010fff0;
fev0 = 0x8010fff4;
fev1 = 0x8010fff8;
fev2 = 0x8010fffc;
fev3 = 0x80110000;
fev10 = 0x80110004;
fev11 = 0x80110008;
fev12 = 0x8011000c;
fev13 = 0x80110010;
first = 0x80110014;
cards = 0x80110018;
regs = 0x8011005c;
cfunc = 0x80110068;
params = 0x80110070;
UserFunc = 0x801100b0;
_snd_seq_s_max = 0x801100c0;
_snd_seq_t_max = 0x801100c2;
_snd_ev_flag = 0x801100c4;
SsFCALL = 0x801100c8;
_SsMarkCallback = 0x80110160;
_ss_score = 0x80110960;
VBLANK_MINUS = 0x801109e0;
_snd_openflag = 0x801109e4;
_svm_sreg_buf = 0x801109e8;
_svm_sreg_dirty = 0x80110b68;
_svm_okon1 = 0x80110b80;
_svm_okon2 = 0x80110b82;
_svm_okof1 = 0x80110b84;
_svm_okof2 = 0x80110b86;
_svm_orev1 = 0x80110b88;
_svm_orev2 = 0x80110b8a;
_svm_voice = 0x80110b90;
_svm_envx_ptr = 0x80111070;
_svm_envx_hist = 0x80111078;
_autovol = 0x801110b8;
_autopan = 0x801110bc;
_svm_stereo_mono = 0x801110c0;
_svm_rattr = 0x801110c8;
_svm_vab_used = 0x801110e0;
_SsVmMaxVoice = 0x801110f0;
_svm_vab_count = 0x801110f2;
kMaxPrograms = 0x801110f4;
_svm_cur = 0x801110f8;
_svm_damper = 0x80111118;
_svm_auto_kof_mode = 0x8011111a;
_svm_vab_vh = 0x80111120;
_svm_vab_pg = 0x80111160;
_svm_vab_tn = 0x801111a0;
_svm_vab_start = 0x801111e0;
_svm_vab_total = 0x80111220;
_svm_vh = 0x80111260;
_svm_pg = 0x80111264;
_svm_tn = 0x80111268;
_svm_vg = 0x8011126c;
_ss_spu_vm_rec = 0x80111270;
_spu_RQ = 0x80111380;
SpuCommonError = 0x80111398;
_spu_st_addrIRQ = 0x801113c8;
_spu_st_cb_transfer_finished = 0x801113cc;
_spu_st_cb_prepare_finished = 0x801113d0;
_spu_st_cb_stream_finished = 0x801113d4;
_spu_st_cb_transfer_saved = 0x801113d8;
_spu_st_cb_IRQ_saved = 0x801113dc;
_spu_st_start_voice_smallest = 0x801113e0;
_spu_st_start_tmp_voice_current = 0x801113e4;
_spu_st_start_prepare_voice_current = 0x801113e8;
_spu_st_start_prepare_voice_smallest = 0x801113ec;
_spu_st_stop_voice_smallest = 0x801113f0;
_spu_st_Info = 0x801113f4;
_spu_st_buf_sizeSBhalf = 0x8011157c;
_spu_st_bufferP = 0x80111580;
_spu_st_start_prepare_lock = 0x80111584;
_spu_st_start_add_lock = 0x80111588;
_spu_st_save_final_block = 0x8011158c;


font_data = 0x800B72B8;
i_str = 0x800B7CB8;
clut = 0x800DAD64;
tpage = 0x800DAD60;
